{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useNavigate}from'react-router-dom';import{getJobs,createJob,updateJob}from'../firebase/firestore';import{useAuth}from'../components/AuthContext';import'../styles/AdminJobs.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminJobs=()=>{const{currentUser,isAdmin}=useAuth();const navigate=useNavigate();const[jobs,setJobs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[showNewJobForm,setShowNewJobForm]=useState(false);const[editingJobId,setEditingJobId]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[statusFilter,setStatusFilter]=useState('');// New/Edit job form state\nconst[jobForm,setJobForm]=useState({title:'',project:'',description:'',location:'',category:'',startDate:'',endDate:'',payRate:'',hoursPerDay:'',cleanersNeeded:'',status:'open'});// Categories for job form\nconst categories=['Post Construction','Office','Childcare','School','Residential','Commercial'];// Locations for job form\nconst locations=['Brisbane','Gold Coast','Sunshine Coast','Sydney','Melbourne','Perth'];// Job statuses\nconst statuses=['open','filled','completed','cancelled'];useEffect(()=>{const fetchJobs=async()=>{if(!currentUser||!isAdmin)return;try{setLoading(true);const result=await getJobs();if(result.success){setJobs(result.jobs);}else{setError('Failed to fetch jobs');}}catch(err){setError('Error fetching jobs: '+err.message);}finally{setLoading(false);}};fetchJobs();},[currentUser,isAdmin]);// Filter jobs based on search term and status filter\nconst filteredJobs=jobs.filter(job=>{const matchesSearch=job.title.toLowerCase().includes(searchTerm.toLowerCase())||job.project.toLowerCase().includes(searchTerm.toLowerCase())||job.location.toLowerCase().includes(searchTerm.toLowerCase());const matchesStatus=statusFilter?job.status===statusFilter:true;return matchesSearch&&matchesStatus;});const handleSearchChange=e=>{setSearchTerm(e.target.value);};const handleStatusFilterChange=e=>{setStatusFilter(e.target.value);};const clearFilters=()=>{setSearchTerm('');setStatusFilter('');};const handleInputChange=e=>{const{name,value}=e.target;setJobForm({...jobForm,[name]:value});};const resetForm=()=>{setJobForm({title:'',project:'',description:'',location:'',category:'',startDate:'',endDate:'',payRate:'',hoursPerDay:'',cleanersNeeded:'',status:'open'});};const handleEditJob=job=>{// Format dates for form input\nconst formatDateForInput=dateString=>{const date=new Date(dateString);return date.toISOString().split('T')[0];};setJobForm({title:job.title,project:job.project,description:job.description,location:job.location,category:job.category,startDate:formatDateForInput(job.startDate),endDate:formatDateForInput(job.endDate),payRate:job.payRate,hoursPerDay:job.hoursPerDay,cleanersNeeded:job.cleanersNeeded,status:job.status});setEditingJobId(job.id);setShowNewJobForm(true);};const handleSubmit=async e=>{e.preventDefault();// Validate form\nif(!jobForm.title||!jobForm.project||!jobForm.location||!jobForm.category||!jobForm.startDate||!jobForm.endDate||!jobForm.payRate||!jobForm.hoursPerDay||!jobForm.cleanersNeeded){setError('Please fill in all required fields');return;}try{setLoading(true);// Convert string values to appropriate types\nconst jobData={...jobForm,payRate:parseFloat(jobForm.payRate),hoursPerDay:parseFloat(jobForm.hoursPerDay),cleanersNeeded:parseInt(jobForm.cleanersNeeded,10)};let result;if(editingJobId){// Update existing job\nresult=await updateJob(editingJobId,jobData);}else{// Create new job\nresult=await createJob(jobData);}if(result.success){// Refresh job list\nconst jobsResult=await getJobs();if(jobsResult.success){setJobs(jobsResult.jobs);}// Reset form and state\nresetForm();setShowNewJobForm(false);setEditingJobId(null);}else{setError(result.error||'Failed to save job');}}catch(err){setError('Error saving job: '+err.message);}finally{setLoading(false);}};const handleCancel=()=>{resetForm();setShowNewJobForm(false);setEditingJobId(null);};// Format date to be more readable\nconst formatDate=dateString=>{const options={year:'numeric',month:'short',day:'numeric'};return new Date(dateString).toLocaleDateString(undefined,options);};if(!isAdmin){return/*#__PURE__*/_jsx(\"div\",{className:\"admin-jobs-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You do not have permission to access the admin jobs page.\"}),/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"back-link\",children:\"Return to Dashboard\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-jobs-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"admin-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Jobs\"}),/*#__PURE__*/_jsx(\"button\",{className:\"new-job-button\",onClick:()=>{resetForm();setShowNewJobForm(true);setEditingJobId(null);},children:\"Create New Job\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),showNewJobForm?/*#__PURE__*/_jsxs(\"div\",{className:\"job-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingJobId?'Edit Job':'Create New Job'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"job-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Job Title*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",name:\"title\",value:jobForm.title,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"project\",children:\"Project Name*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"project\",name:\"project\",value:jobForm.project,onChange:handleInputChange,required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description*\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",value:jobForm.description,onChange:handleInputChange,rows:4,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"location\",children:\"Location*\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"location\",name:\"location\",value:jobForm.location,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Location\"}),locations.map(location=>/*#__PURE__*/_jsx(\"option\",{value:location,children:location},location))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category\",children:\"Category*\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category\",name:\"category\",value:jobForm.category,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"startDate\",children:\"Start Date*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"startDate\",name:\"startDate\",value:jobForm.startDate,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"endDate\",children:\"End Date*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"endDate\",name:\"endDate\",value:jobForm.endDate,onChange:handleInputChange,required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"payRate\",children:\"Pay Rate ($ per cleaner)*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"payRate\",name:\"payRate\",value:jobForm.payRate,onChange:handleInputChange,min:\"0\",step:\"0.01\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"hoursPerDay\",children:\"Hours Per Day*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"hoursPerDay\",name:\"hoursPerDay\",value:jobForm.hoursPerDay,onChange:handleInputChange,min:\"0\",step:\"0.5\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cleanersNeeded\",children:\"Cleaners Needed*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"cleanersNeeded\",name:\"cleanersNeeded\",value:jobForm.cleanersNeeded,onChange:handleInputChange,min:\"1\",step:\"1\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"status\",children:\"Status*\"}),/*#__PURE__*/_jsx(\"select\",{id:\"status\",name:\"status\",value:jobForm.status,onChange:handleInputChange,required:true,children:statuses.map(status=>/*#__PURE__*/_jsx(\"option\",{value:status,children:status.charAt(0).toUpperCase()+status.slice(1)},status))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"cancel-button\",onClick:handleCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:loading,children:loading?'Saving...':editingJobId?'Update Job':'Create Job'})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"jobs-filters\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search jobs...\",value:searchTerm,onChange:handleSearchChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"status-filter\",children:\"Status:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"status-filter\",value:statusFilter,onChange:handleStatusFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Statuses\"}),statuses.map(status=>/*#__PURE__*/_jsx(\"option\",{value:status,children:status.charAt(0).toUpperCase()+status.slice(1)},status))]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-button\",onClick:clearFilters,children:\"Clear Filters\"})]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading jobs...\"})]}):filteredJobs.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-jobs-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No jobs found matching your criteria.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-button\",onClick:clearFilters,children:\"Clear Filters\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"jobs-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"jobs-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Project\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Location\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Dates\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Cleaners\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pay Rate\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredJobs.map(job=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:job.title}),/*#__PURE__*/_jsx(\"td\",{children:job.project}),/*#__PURE__*/_jsx(\"td\",{children:job.location}),/*#__PURE__*/_jsxs(\"td\",{children:[formatDate(job.startDate),\" - \",formatDate(job.endDate)]}),/*#__PURE__*/_jsx(\"td\",{children:job.cleanersNeeded}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",job.payRate]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${job.status}`,children:job.status.charAt(0).toUpperCase()+job.status.slice(1)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit-button\",onClick:()=>handleEditJob(job),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-button\",onClick:()=>navigate(`/admin/jobs/${job.id}/applications`),children:\"Applications\"})]})})]},job.id))})]})})]})]});};export default AdminJobs;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","getJobs","createJob","updateJob","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminJobs","currentUser","isAdmin","navigate","jobs","setJobs","loading","setLoading","error","setError","showNewJobForm","setShowNewJobForm","editingJobId","setEditingJobId","searchTerm","setSearchTerm","statusFilter","setStatusFilter","jobForm","setJobForm","title","project","description","location","category","startDate","endDate","payRate","hoursPerDay","cleanersNeeded","status","categories","locations","statuses","fetchJobs","result","success","err","message","filteredJobs","filter","job","matchesSearch","toLowerCase","includes","matchesStatus","handleSearchChange","e","target","value","handleStatusFilterChange","clearFilters","handleInputChange","name","resetForm","handleEditJob","formatDateForInput","dateString","date","Date","toISOString","split","id","handleSubmit","preventDefault","jobData","parseFloat","parseInt","jobsResult","handleCancel","formatDate","options","year","month","day","toLocaleDateString","undefined","className","children","to","onClick","onSubmit","htmlFor","type","onChange","required","rows","map","min","step","charAt","toUpperCase","slice","disabled","placeholder","length"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/pages/AdminJobs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getJobs, createJob, updateJob } from '../firebase/firestore';\nimport { useAuth } from '../components/AuthContext';\nimport '../styles/AdminJobs.css';\n\nconst AdminJobs = () => {\n  const { currentUser, isAdmin } = useAuth();\n  const navigate = useNavigate();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showNewJobForm, setShowNewJobForm] = useState(false);\n  const [editingJobId, setEditingJobId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  \n  // New/Edit job form state\n  const [jobForm, setJobForm] = useState({\n    title: '',\n    project: '',\n    description: '',\n    location: '',\n    category: '',\n    startDate: '',\n    endDate: '',\n    payRate: '',\n    hoursPerDay: '',\n    cleanersNeeded: '',\n    status: 'open'\n  });\n\n  // Categories for job form\n  const categories = [\n    'Post Construction',\n    'Office',\n    'Childcare',\n    'School',\n    'Residential',\n    'Commercial'\n  ];\n\n  // Locations for job form\n  const locations = [\n    'Brisbane',\n    'Gold Coast',\n    'Sunshine Coast',\n    'Sydney',\n    'Melbourne',\n    'Perth'\n  ];\n\n  // Job statuses\n  const statuses = ['open', 'filled', 'completed', 'cancelled'];\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      if (!currentUser || !isAdmin) return;\n      \n      try {\n        setLoading(true);\n        const result = await getJobs();\n        \n        if (result.success) {\n          setJobs(result.jobs);\n        } else {\n          setError('Failed to fetch jobs');\n        }\n      } catch (err) {\n        setError('Error fetching jobs: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, [currentUser, isAdmin]);\n\n  // Filter jobs based on search term and status filter\n  const filteredJobs = jobs.filter(job => {\n    const matchesSearch = \n      job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      job.project.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      job.location.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = statusFilter ? job.status === statusFilter : true;\n    \n    return matchesSearch && matchesStatus;\n  });\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleStatusFilterChange = (e) => {\n    setStatusFilter(e.target.value);\n  };\n\n  const clearFilters = () => {\n    setSearchTerm('');\n    setStatusFilter('');\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setJobForm({\n      ...jobForm,\n      [name]: value\n    });\n  };\n\n  const resetForm = () => {\n    setJobForm({\n      title: '',\n      project: '',\n      description: '',\n      location: '',\n      category: '',\n      startDate: '',\n      endDate: '',\n      payRate: '',\n      hoursPerDay: '',\n      cleanersNeeded: '',\n      status: 'open'\n    });\n  };\n\n  const handleEditJob = (job) => {\n    // Format dates for form input\n    const formatDateForInput = (dateString) => {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    };\n\n    setJobForm({\n      title: job.title,\n      project: job.project,\n      description: job.description,\n      location: job.location,\n      category: job.category,\n      startDate: formatDateForInput(job.startDate),\n      endDate: formatDateForInput(job.endDate),\n      payRate: job.payRate,\n      hoursPerDay: job.hoursPerDay,\n      cleanersNeeded: job.cleanersNeeded,\n      status: job.status\n    });\n    \n    setEditingJobId(job.id);\n    setShowNewJobForm(true);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    if (!jobForm.title || !jobForm.project || !jobForm.location || \n        !jobForm.category || !jobForm.startDate || !jobForm.endDate || \n        !jobForm.payRate || !jobForm.hoursPerDay || !jobForm.cleanersNeeded) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      // Convert string values to appropriate types\n      const jobData = {\n        ...jobForm,\n        payRate: parseFloat(jobForm.payRate),\n        hoursPerDay: parseFloat(jobForm.hoursPerDay),\n        cleanersNeeded: parseInt(jobForm.cleanersNeeded, 10)\n      };\n      \n      let result;\n      \n      if (editingJobId) {\n        // Update existing job\n        result = await updateJob(editingJobId, jobData);\n      } else {\n        // Create new job\n        result = await createJob(jobData);\n      }\n      \n      if (result.success) {\n        // Refresh job list\n        const jobsResult = await getJobs();\n        if (jobsResult.success) {\n          setJobs(jobsResult.jobs);\n        }\n        \n        // Reset form and state\n        resetForm();\n        setShowNewJobForm(false);\n        setEditingJobId(null);\n      } else {\n        setError(result.error || 'Failed to save job');\n      }\n    } catch (err) {\n      setError('Error saving job: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    setShowNewJobForm(false);\n    setEditingJobId(null);\n  };\n\n  // Format date to be more readable\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  if (!isAdmin) {\n    return (\n      <div className=\"admin-jobs-container\">\n        <div className=\"error-message\">\n          <h2>Access Denied</h2>\n          <p>You do not have permission to access the admin jobs page.</p>\n          <Link to=\"/dashboard\" className=\"back-link\">Return to Dashboard</Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-jobs-container\">\n      <div className=\"admin-header\">\n        <h1>Manage Jobs</h1>\n        <button \n          className=\"new-job-button\"\n          onClick={() => {\n            resetForm();\n            setShowNewJobForm(true);\n            setEditingJobId(null);\n          }}\n        >\n          Create New Job\n        </button>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      {showNewJobForm ? (\n        <div className=\"job-form-container\">\n          <h2>{editingJobId ? 'Edit Job' : 'Create New Job'}</h2>\n          \n          <form onSubmit={handleSubmit} className=\"job-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Job Title*</label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  value={jobForm.title}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"project\">Project Name*</label>\n                <input\n                  type=\"text\"\n                  id=\"project\"\n                  name=\"project\"\n                  value={jobForm.project}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description*</label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                value={jobForm.description}\n                onChange={handleInputChange}\n                rows={4}\n                required\n              />\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"location\">Location*</label>\n                <select\n                  id=\"location\"\n                  name=\"location\"\n                  value={jobForm.location}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">Select Location</option>\n                  {locations.map(location => (\n                    <option key={location} value={location}>{location}</option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"category\">Category*</label>\n                <select\n                  id=\"category\"\n                  name=\"category\"\n                  value={jobForm.category}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map(category => (\n                    <option key={category} value={category}>{category}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"startDate\">Start Date*</label>\n                <input\n                  type=\"date\"\n                  id=\"startDate\"\n                  name=\"startDate\"\n                  value={jobForm.startDate}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"endDate\">End Date*</label>\n                <input\n                  type=\"date\"\n                  id=\"endDate\"\n                  name=\"endDate\"\n                  value={jobForm.endDate}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"payRate\">Pay Rate ($ per cleaner)*</label>\n                <input\n                  type=\"number\"\n                  id=\"payRate\"\n                  name=\"payRate\"\n                  value={jobForm.payRate}\n                  onChange={handleInputChange}\n                  min=\"0\"\n                  step=\"0.01\"\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"hoursPerDay\">Hours Per Day*</label>\n                <input\n                  type=\"number\"\n                  id=\"hoursPerDay\"\n                  name=\"hoursPerDay\"\n                  value={jobForm.hoursPerDay}\n                  onChange={handleInputChange}\n                  min=\"0\"\n                  step=\"0.5\"\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"cleanersNeeded\">Cleaners Needed*</label>\n                <input\n                  type=\"number\"\n                  id=\"cleanersNeeded\"\n                  name=\"cleanersNeeded\"\n                  value={jobForm.cleanersNeeded}\n                  onChange={handleInputChange}\n                  min=\"1\"\n                  step=\"1\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"status\">Status*</label>\n              <select\n                id=\"status\"\n                name=\"status\"\n                value={jobForm.status}\n                onChange={handleInputChange}\n                required\n              >\n                {statuses.map(status => (\n                  <option key={status} value={status}>\n                    {status.charAt(0).toUpperCase() + status.slice(1)}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"button\" className=\"cancel-button\" onClick={handleCancel}>\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n                {loading ? 'Saving...' : (editingJobId ? 'Update Job' : 'Create Job')}\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <>\n          <div className=\"jobs-filters\">\n            <div className=\"search-bar\">\n              <input\n                type=\"text\"\n                placeholder=\"Search jobs...\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n            </div>\n            \n            <div className=\"filter-options\">\n              <div className=\"filter-group\">\n                <label htmlFor=\"status-filter\">Status:</label>\n                <select\n                  id=\"status-filter\"\n                  value={statusFilter}\n                  onChange={handleStatusFilterChange}\n                >\n                  <option value=\"\">All Statuses</option>\n                  {statuses.map(status => (\n                    <option key={status} value={status}>\n                      {status.charAt(0).toUpperCase() + status.slice(1)}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <button className=\"clear-filters-button\" onClick={clearFilters}>\n                Clear Filters\n              </button>\n            </div>\n          </div>\n          \n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading jobs...</p>\n            </div>\n          ) : filteredJobs.length === 0 ? (\n            <div className=\"no-jobs-message\">\n              <p>No jobs found matching your criteria.</p>\n              <button className=\"clear-filters-button\" onClick={clearFilters}>\n                Clear Filters\n              </button>\n            </div>\n          ) : (\n            <div className=\"jobs-table-container\">\n              <table className=\"jobs-table\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Project</th>\n                    <th>Location</th>\n                    <th>Dates</th>\n                    <th>Cleaners</th>\n                    <th>Pay Rate</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredJobs.map(job => (\n                    <tr key={job.id}>\n                      <td>{job.title}</td>\n                      <td>{job.project}</td>\n                      <td>{job.location}</td>\n                      <td>\n                        {formatDate(job.startDate)} - {formatDate(job.endDate)}\n                      </td>\n                      <td>{job.cleanersNeeded}</td>\n                      <td>${job.payRate}</td>\n                      <td>\n                        <span className={`status-badge ${job.status}`}>\n                          {job.status.charAt(0).toUpperCase() + job.status.slice(1)}\n                        </span>\n                      </td>\n                      <td>\n                        <div className=\"action-buttons\">\n                          <button \n                            className=\"edit-button\"\n                            onClick={() => handleEditJob(job)}\n                          >\n                            Edit\n                          </button>\n                          <button \n                            className=\"view-button\"\n                            onClick={() => navigate(`/admin/jobs/${job.id}/applications`)}\n                          >\n                            Applications\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AdminJobs;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,OAASC,OAAO,CAAEC,SAAS,CAAEC,SAAS,KAAQ,uBAAuB,CACrE,OAASC,OAAO,KAAQ,2BAA2B,CACnD,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEjC,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAEC,WAAW,CAAEC,OAAQ,CAAC,CAAGT,OAAO,CAAC,CAAC,CAC1C,KAAM,CAAAU,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACe,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACsB,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACwB,cAAc,CAAEC,iBAAiB,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAC0B,YAAY,CAAEC,eAAe,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC4B,UAAU,CAAEC,aAAa,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC8B,YAAY,CAAEC,eAAe,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAEpD;AACA,KAAM,CAACgC,OAAO,CAAEC,UAAU,CAAC,CAAGjC,QAAQ,CAAC,CACrCkC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,cAAc,CAAE,EAAE,CAClBC,MAAM,CAAE,MACV,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,UAAU,CAAG,CACjB,mBAAmB,CACnB,QAAQ,CACR,WAAW,CACX,QAAQ,CACR,aAAa,CACb,YAAY,CACb,CAED;AACA,KAAM,CAAAC,SAAS,CAAG,CAChB,UAAU,CACV,YAAY,CACZ,gBAAgB,CAChB,QAAQ,CACR,WAAW,CACX,OAAO,CACR,CAED;AACA,KAAM,CAAAC,QAAQ,CAAG,CAAC,MAAM,CAAE,QAAQ,CAAE,WAAW,CAAE,WAAW,CAAC,CAE7D9C,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+C,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CAACjC,WAAW,EAAI,CAACC,OAAO,CAAE,OAE9B,GAAI,CACFK,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAA4B,MAAM,CAAG,KAAM,CAAA7C,OAAO,CAAC,CAAC,CAE9B,GAAI6C,MAAM,CAACC,OAAO,CAAE,CAClB/B,OAAO,CAAC8B,MAAM,CAAC/B,IAAI,CAAC,CACtB,CAAC,IAAM,CACLK,QAAQ,CAAC,sBAAsB,CAAC,CAClC,CACF,CAAE,MAAO4B,GAAG,CAAE,CACZ5B,QAAQ,CAAC,uBAAuB,CAAG4B,GAAG,CAACC,OAAO,CAAC,CACjD,CAAC,OAAS,CACR/B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED2B,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACjC,WAAW,CAAEC,OAAO,CAAC,CAAC,CAE1B;AACA,KAAM,CAAAqC,YAAY,CAAGnC,IAAI,CAACoC,MAAM,CAACC,GAAG,EAAI,CACtC,KAAM,CAAAC,aAAa,CACjBD,GAAG,CAACrB,KAAK,CAACuB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9B,UAAU,CAAC6B,WAAW,CAAC,CAAC,CAAC,EAC1DF,GAAG,CAACpB,OAAO,CAACsB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9B,UAAU,CAAC6B,WAAW,CAAC,CAAC,CAAC,EAC5DF,GAAG,CAAClB,QAAQ,CAACoB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9B,UAAU,CAAC6B,WAAW,CAAC,CAAC,CAAC,CAE/D,KAAM,CAAAE,aAAa,CAAG7B,YAAY,CAAGyB,GAAG,CAACX,MAAM,GAAKd,YAAY,CAAG,IAAI,CAEvE,MAAO,CAAA0B,aAAa,EAAIG,aAAa,CACvC,CAAC,CAAC,CAEF,KAAM,CAAAC,kBAAkB,CAAIC,CAAC,EAAK,CAChChC,aAAa,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,wBAAwB,CAAIH,CAAC,EAAK,CACtC9B,eAAe,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACjC,CAAC,CAED,KAAM,CAAAE,YAAY,CAAGA,CAAA,GAAM,CACzBpC,aAAa,CAAC,EAAE,CAAC,CACjBE,eAAe,CAAC,EAAE,CAAC,CACrB,CAAC,CAED,KAAM,CAAAmC,iBAAiB,CAAIL,CAAC,EAAK,CAC/B,KAAM,CAAEM,IAAI,CAAEJ,KAAM,CAAC,CAAGF,CAAC,CAACC,MAAM,CAChC7B,UAAU,CAAC,CACT,GAAGD,OAAO,CACV,CAACmC,IAAI,EAAGJ,KACV,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAK,SAAS,CAAGA,CAAA,GAAM,CACtBnC,UAAU,CAAC,CACTC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,cAAc,CAAE,EAAE,CAClBC,MAAM,CAAE,MACV,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAyB,aAAa,CAAId,GAAG,EAAK,CAC7B;AACA,KAAM,CAAAe,kBAAkB,CAAIC,UAAU,EAAK,CACzC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CACjC,MAAO,CAAAC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,CAAC,CAED1C,UAAU,CAAC,CACTC,KAAK,CAAEqB,GAAG,CAACrB,KAAK,CAChBC,OAAO,CAAEoB,GAAG,CAACpB,OAAO,CACpBC,WAAW,CAAEmB,GAAG,CAACnB,WAAW,CAC5BC,QAAQ,CAAEkB,GAAG,CAAClB,QAAQ,CACtBC,QAAQ,CAAEiB,GAAG,CAACjB,QAAQ,CACtBC,SAAS,CAAE+B,kBAAkB,CAACf,GAAG,CAAChB,SAAS,CAAC,CAC5CC,OAAO,CAAE8B,kBAAkB,CAACf,GAAG,CAACf,OAAO,CAAC,CACxCC,OAAO,CAAEc,GAAG,CAACd,OAAO,CACpBC,WAAW,CAAEa,GAAG,CAACb,WAAW,CAC5BC,cAAc,CAAEY,GAAG,CAACZ,cAAc,CAClCC,MAAM,CAAEW,GAAG,CAACX,MACd,CAAC,CAAC,CAEFjB,eAAe,CAAC4B,GAAG,CAACqB,EAAE,CAAC,CACvBnD,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAED,KAAM,CAAAoD,YAAY,CAAG,KAAO,CAAAhB,CAAC,EAAK,CAChCA,CAAC,CAACiB,cAAc,CAAC,CAAC,CAElB;AACA,GAAI,CAAC9C,OAAO,CAACE,KAAK,EAAI,CAACF,OAAO,CAACG,OAAO,EAAI,CAACH,OAAO,CAACK,QAAQ,EACvD,CAACL,OAAO,CAACM,QAAQ,EAAI,CAACN,OAAO,CAACO,SAAS,EAAI,CAACP,OAAO,CAACQ,OAAO,EAC3D,CAACR,OAAO,CAACS,OAAO,EAAI,CAACT,OAAO,CAACU,WAAW,EAAI,CAACV,OAAO,CAACW,cAAc,CAAE,CACvEpB,QAAQ,CAAC,oCAAoC,CAAC,CAC9C,OACF,CAEA,GAAI,CACFF,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAA0D,OAAO,CAAG,CACd,GAAG/C,OAAO,CACVS,OAAO,CAAEuC,UAAU,CAAChD,OAAO,CAACS,OAAO,CAAC,CACpCC,WAAW,CAAEsC,UAAU,CAAChD,OAAO,CAACU,WAAW,CAAC,CAC5CC,cAAc,CAAEsC,QAAQ,CAACjD,OAAO,CAACW,cAAc,CAAE,EAAE,CACrD,CAAC,CAED,GAAI,CAAAM,MAAM,CAEV,GAAIvB,YAAY,CAAE,CAChB;AACAuB,MAAM,CAAG,KAAM,CAAA3C,SAAS,CAACoB,YAAY,CAAEqD,OAAO,CAAC,CACjD,CAAC,IAAM,CACL;AACA9B,MAAM,CAAG,KAAM,CAAA5C,SAAS,CAAC0E,OAAO,CAAC,CACnC,CAEA,GAAI9B,MAAM,CAACC,OAAO,CAAE,CAClB;AACA,KAAM,CAAAgC,UAAU,CAAG,KAAM,CAAA9E,OAAO,CAAC,CAAC,CAClC,GAAI8E,UAAU,CAAChC,OAAO,CAAE,CACtB/B,OAAO,CAAC+D,UAAU,CAAChE,IAAI,CAAC,CAC1B,CAEA;AACAkD,SAAS,CAAC,CAAC,CACX3C,iBAAiB,CAAC,KAAK,CAAC,CACxBE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,IAAM,CACLJ,QAAQ,CAAC0B,MAAM,CAAC3B,KAAK,EAAI,oBAAoB,CAAC,CAChD,CACF,CAAE,MAAO6B,GAAG,CAAE,CACZ5B,QAAQ,CAAC,oBAAoB,CAAG4B,GAAG,CAACC,OAAO,CAAC,CAC9C,CAAC,OAAS,CACR/B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA8D,YAAY,CAAGA,CAAA,GAAM,CACzBf,SAAS,CAAC,CAAC,CACX3C,iBAAiB,CAAC,KAAK,CAAC,CACxBE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAyD,UAAU,CAAIb,UAAU,EAAK,CACjC,KAAM,CAAAc,OAAO,CAAG,CAAEC,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CACnE,MAAO,IAAI,CAAAf,IAAI,CAACF,UAAU,CAAC,CAACkB,kBAAkB,CAACC,SAAS,CAAEL,OAAO,CAAC,CACpE,CAAC,CAED,GAAI,CAACrE,OAAO,CAAE,CACZ,mBACEP,IAAA,QAAKkF,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCjF,KAAA,QAAKgF,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BnF,IAAA,OAAAmF,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBnF,IAAA,MAAAmF,QAAA,CAAG,2DAAyD,CAAG,CAAC,cAChEnF,IAAA,CAACP,IAAI,EAAC2F,EAAE,CAAC,YAAY,CAACF,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,qBAAmB,CAAM,CAAC,EACnE,CAAC,CACH,CAAC,CAEV,CAEA,mBACEjF,KAAA,QAAKgF,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCjF,KAAA,QAAKgF,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnF,IAAA,OAAAmF,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBnF,IAAA,WACEkF,SAAS,CAAC,gBAAgB,CAC1BG,OAAO,CAAEA,CAAA,GAAM,CACb1B,SAAS,CAAC,CAAC,CACX3C,iBAAiB,CAAC,IAAI,CAAC,CACvBE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CAAAiE,QAAA,CACH,gBAED,CAAQ,CAAC,EACN,CAAC,CAELtE,KAAK,eAAIb,IAAA,QAAKkF,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEtE,KAAK,CAAM,CAAC,CAErDE,cAAc,cACbb,KAAA,QAAKgF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCnF,IAAA,OAAAmF,QAAA,CAAKlE,YAAY,CAAG,UAAU,CAAG,gBAAgB,CAAK,CAAC,cAEvDf,KAAA,SAAMoF,QAAQ,CAAElB,YAAa,CAACc,SAAS,CAAC,UAAU,CAAAC,QAAA,eAChDjF,KAAA,QAAKgF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,OAAO,CAAAJ,QAAA,CAAC,YAAU,CAAO,CAAC,cACzCnF,IAAA,UACEwF,IAAI,CAAC,MAAM,CACXrB,EAAE,CAAC,OAAO,CACVT,IAAI,CAAC,OAAO,CACZJ,KAAK,CAAE/B,OAAO,CAACE,KAAM,CACrBgE,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MACT,CAAC,EACC,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,SAAS,CAAAJ,QAAA,CAAC,eAAa,CAAO,CAAC,cAC9CnF,IAAA,UACEwF,IAAI,CAAC,MAAM,CACXrB,EAAE,CAAC,SAAS,CACZT,IAAI,CAAC,SAAS,CACdJ,KAAK,CAAE/B,OAAO,CAACG,OAAQ,CACvB+D,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MACT,CAAC,EACC,CAAC,EACH,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAO,CAAC,cACjDnF,IAAA,aACEmE,EAAE,CAAC,aAAa,CAChBT,IAAI,CAAC,aAAa,CAClBJ,KAAK,CAAE/B,OAAO,CAACI,WAAY,CAC3B8D,QAAQ,CAAEhC,iBAAkB,CAC5BkC,IAAI,CAAE,CAAE,CACRD,QAAQ,MACT,CAAC,EACC,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3CjF,KAAA,WACEiE,EAAE,CAAC,UAAU,CACbT,IAAI,CAAC,UAAU,CACfJ,KAAK,CAAE/B,OAAO,CAACK,QAAS,CACxB6D,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MAAAP,QAAA,eAERnF,IAAA,WAAQsD,KAAK,CAAC,EAAE,CAAA6B,QAAA,CAAC,iBAAe,CAAQ,CAAC,CACxC9C,SAAS,CAACuD,GAAG,CAAChE,QAAQ,eACrB5B,IAAA,WAAuBsD,KAAK,CAAE1B,QAAS,CAAAuD,QAAA,CAAEvD,QAAQ,EAApCA,QAA6C,CAC3D,CAAC,EACI,CAAC,EACN,CAAC,cAEN1B,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3CjF,KAAA,WACEiE,EAAE,CAAC,UAAU,CACbT,IAAI,CAAC,UAAU,CACfJ,KAAK,CAAE/B,OAAO,CAACM,QAAS,CACxB4D,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MAAAP,QAAA,eAERnF,IAAA,WAAQsD,KAAK,CAAC,EAAE,CAAA6B,QAAA,CAAC,iBAAe,CAAQ,CAAC,CACxC/C,UAAU,CAACwD,GAAG,CAAC/D,QAAQ,eACtB7B,IAAA,WAAuBsD,KAAK,CAAEzB,QAAS,CAAAsD,QAAA,CAAEtD,QAAQ,EAApCA,QAA6C,CAC3D,CAAC,EACI,CAAC,EACN,CAAC,EACH,CAAC,cAEN3B,KAAA,QAAKgF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,WAAW,CAAAJ,QAAA,CAAC,aAAW,CAAO,CAAC,cAC9CnF,IAAA,UACEwF,IAAI,CAAC,MAAM,CACXrB,EAAE,CAAC,WAAW,CACdT,IAAI,CAAC,WAAW,CAChBJ,KAAK,CAAE/B,OAAO,CAACO,SAAU,CACzB2D,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MACT,CAAC,EACC,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,SAAS,CAAAJ,QAAA,CAAC,WAAS,CAAO,CAAC,cAC1CnF,IAAA,UACEwF,IAAI,CAAC,MAAM,CACXrB,EAAE,CAAC,SAAS,CACZT,IAAI,CAAC,SAAS,CACdJ,KAAK,CAAE/B,OAAO,CAACQ,OAAQ,CACvB0D,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MACT,CAAC,EACC,CAAC,EACH,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,SAAS,CAAAJ,QAAA,CAAC,2BAAyB,CAAO,CAAC,cAC1DnF,IAAA,UACEwF,IAAI,CAAC,QAAQ,CACbrB,EAAE,CAAC,SAAS,CACZT,IAAI,CAAC,SAAS,CACdJ,KAAK,CAAE/B,OAAO,CAACS,OAAQ,CACvByD,QAAQ,CAAEhC,iBAAkB,CAC5BoC,GAAG,CAAC,GAAG,CACPC,IAAI,CAAC,MAAM,CACXJ,QAAQ,MACT,CAAC,EACC,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,aAAa,CAAAJ,QAAA,CAAC,gBAAc,CAAO,CAAC,cACnDnF,IAAA,UACEwF,IAAI,CAAC,QAAQ,CACbrB,EAAE,CAAC,aAAa,CAChBT,IAAI,CAAC,aAAa,CAClBJ,KAAK,CAAE/B,OAAO,CAACU,WAAY,CAC3BwD,QAAQ,CAAEhC,iBAAkB,CAC5BoC,GAAG,CAAC,GAAG,CACPC,IAAI,CAAC,KAAK,CACVJ,QAAQ,MACT,CAAC,EACC,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,kBAAgB,CAAO,CAAC,cACxDnF,IAAA,UACEwF,IAAI,CAAC,QAAQ,CACbrB,EAAE,CAAC,gBAAgB,CACnBT,IAAI,CAAC,gBAAgB,CACrBJ,KAAK,CAAE/B,OAAO,CAACW,cAAe,CAC9BuD,QAAQ,CAAEhC,iBAAkB,CAC5BoC,GAAG,CAAC,GAAG,CACPC,IAAI,CAAC,GAAG,CACRJ,QAAQ,MACT,CAAC,EACC,CAAC,EACH,CAAC,cAENxF,KAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,IAAA,UAAOuF,OAAO,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAO,CAAC,cACvCnF,IAAA,WACEmE,EAAE,CAAC,QAAQ,CACXT,IAAI,CAAC,QAAQ,CACbJ,KAAK,CAAE/B,OAAO,CAACY,MAAO,CACtBsD,QAAQ,CAAEhC,iBAAkB,CAC5BiC,QAAQ,MAAAP,QAAA,CAEP7C,QAAQ,CAACsD,GAAG,CAACzD,MAAM,eAClBnC,IAAA,WAAqBsD,KAAK,CAAEnB,MAAO,CAAAgD,QAAA,CAChChD,MAAM,CAAC4D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAG7D,MAAM,CAAC8D,KAAK,CAAC,CAAC,CAAC,EADtC9D,MAEL,CACT,CAAC,CACI,CAAC,EACN,CAAC,cAENjC,KAAA,QAAKgF,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnF,IAAA,WAAQwF,IAAI,CAAC,QAAQ,CAACN,SAAS,CAAC,eAAe,CAACG,OAAO,CAAEX,YAAa,CAAAS,QAAA,CAAC,QAEvE,CAAQ,CAAC,cACTnF,IAAA,WAAQwF,IAAI,CAAC,QAAQ,CAACN,SAAS,CAAC,eAAe,CAACgB,QAAQ,CAAEvF,OAAQ,CAAAwE,QAAA,CAC/DxE,OAAO,CAAG,WAAW,CAAIM,YAAY,CAAG,YAAY,CAAG,YAAa,CAC/D,CAAC,EACN,CAAC,EACF,CAAC,EACJ,CAAC,cAENf,KAAA,CAAAE,SAAA,EAAA+E,QAAA,eACEjF,KAAA,QAAKgF,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnF,IAAA,QAAKkF,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBnF,IAAA,UACEwF,IAAI,CAAC,MAAM,CACXW,WAAW,CAAC,gBAAgB,CAC5B7C,KAAK,CAAEnC,UAAW,CAClBsE,QAAQ,CAAEtC,kBAAmB,CAC9B,CAAC,CACC,CAAC,cAENjD,KAAA,QAAKgF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BjF,KAAA,QAAKgF,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnF,IAAA,UAAOuF,OAAO,CAAC,eAAe,CAAAJ,QAAA,CAAC,SAAO,CAAO,CAAC,cAC9CjF,KAAA,WACEiE,EAAE,CAAC,eAAe,CAClBb,KAAK,CAAEjC,YAAa,CACpBoE,QAAQ,CAAElC,wBAAyB,CAAA4B,QAAA,eAEnCnF,IAAA,WAAQsD,KAAK,CAAC,EAAE,CAAA6B,QAAA,CAAC,cAAY,CAAQ,CAAC,CACrC7C,QAAQ,CAACsD,GAAG,CAACzD,MAAM,eAClBnC,IAAA,WAAqBsD,KAAK,CAAEnB,MAAO,CAAAgD,QAAA,CAChChD,MAAM,CAAC4D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAG7D,MAAM,CAAC8D,KAAK,CAAC,CAAC,CAAC,EADtC9D,MAEL,CACT,CAAC,EACI,CAAC,EACN,CAAC,cAENnC,IAAA,WAAQkF,SAAS,CAAC,sBAAsB,CAACG,OAAO,CAAE7B,YAAa,CAAA2B,QAAA,CAAC,eAEhE,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAELxE,OAAO,cACNT,KAAA,QAAKgF,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCnF,IAAA,QAAKkF,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvClF,IAAA,MAAAmF,QAAA,CAAG,iBAAe,CAAG,CAAC,EACnB,CAAC,CACJvC,YAAY,CAACwD,MAAM,GAAK,CAAC,cAC3BlG,KAAA,QAAKgF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnF,IAAA,MAAAmF,QAAA,CAAG,uCAAqC,CAAG,CAAC,cAC5CnF,IAAA,WAAQkF,SAAS,CAAC,sBAAsB,CAACG,OAAO,CAAE7B,YAAa,CAAA2B,QAAA,CAAC,eAEhE,CAAQ,CAAC,EACN,CAAC,cAENnF,IAAA,QAAKkF,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCjF,KAAA,UAAOgF,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3BnF,IAAA,UAAAmF,QAAA,cACEjF,KAAA,OAAAiF,QAAA,eACEnF,IAAA,OAAAmF,QAAA,CAAI,OAAK,CAAI,CAAC,cACdnF,IAAA,OAAAmF,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBnF,IAAA,OAAAmF,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBnF,IAAA,OAAAmF,QAAA,CAAI,OAAK,CAAI,CAAC,cACdnF,IAAA,OAAAmF,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBnF,IAAA,OAAAmF,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBnF,IAAA,OAAAmF,QAAA,CAAI,QAAM,CAAI,CAAC,cACfnF,IAAA,OAAAmF,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRnF,IAAA,UAAAmF,QAAA,CACGvC,YAAY,CAACgD,GAAG,CAAC9C,GAAG,eACnB5C,KAAA,OAAAiF,QAAA,eACEnF,IAAA,OAAAmF,QAAA,CAAKrC,GAAG,CAACrB,KAAK,CAAK,CAAC,cACpBzB,IAAA,OAAAmF,QAAA,CAAKrC,GAAG,CAACpB,OAAO,CAAK,CAAC,cACtB1B,IAAA,OAAAmF,QAAA,CAAKrC,GAAG,CAAClB,QAAQ,CAAK,CAAC,cACvB1B,KAAA,OAAAiF,QAAA,EACGR,UAAU,CAAC7B,GAAG,CAAChB,SAAS,CAAC,CAAC,KAAG,CAAC6C,UAAU,CAAC7B,GAAG,CAACf,OAAO,CAAC,EACpD,CAAC,cACL/B,IAAA,OAAAmF,QAAA,CAAKrC,GAAG,CAACZ,cAAc,CAAK,CAAC,cAC7BhC,KAAA,OAAAiF,QAAA,EAAI,GAAC,CAACrC,GAAG,CAACd,OAAO,EAAK,CAAC,cACvBhC,IAAA,OAAAmF,QAAA,cACEnF,IAAA,SAAMkF,SAAS,CAAE,gBAAgBpC,GAAG,CAACX,MAAM,EAAG,CAAAgD,QAAA,CAC3CrC,GAAG,CAACX,MAAM,CAAC4D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGlD,GAAG,CAACX,MAAM,CAAC8D,KAAK,CAAC,CAAC,CAAC,CACrD,CAAC,CACL,CAAC,cACLjG,IAAA,OAAAmF,QAAA,cACEjF,KAAA,QAAKgF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnF,IAAA,WACEkF,SAAS,CAAC,aAAa,CACvBG,OAAO,CAAEA,CAAA,GAAMzB,aAAa,CAACd,GAAG,CAAE,CAAAqC,QAAA,CACnC,MAED,CAAQ,CAAC,cACTnF,IAAA,WACEkF,SAAS,CAAC,aAAa,CACvBG,OAAO,CAAEA,CAAA,GAAM7E,QAAQ,CAAC,eAAesC,GAAG,CAACqB,EAAE,eAAe,CAAE,CAAAgB,QAAA,CAC/D,cAED,CAAQ,CAAC,EACN,CAAC,CACJ,CAAC,GA7BErC,GAAG,CAACqB,EA8BT,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CACN,EACD,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9D,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}