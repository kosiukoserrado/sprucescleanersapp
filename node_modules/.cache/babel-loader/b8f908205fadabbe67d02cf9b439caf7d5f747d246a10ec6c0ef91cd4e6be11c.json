{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useNavigate}from'react-router-dom';import{getCourses,createCourse,updateCourse}from'../firebase/firestore';import{useAuth}from'../components/AuthContext';import'../styles/AdminCourses.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminCourses=()=>{const{currentUser,isAdmin}=useAuth();const navigate=useNavigate();const[courses,setCourses]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[showNewCourseForm,setShowNewCourseForm]=useState(false);const[editingCourseId,setEditingCourseId]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[categoryFilter,setCategoryFilter]=useState('');// New/Edit course form state\nconst[courseForm,setCourseForm]=useState({title:'',description:'',category:'',imageUrl:'',status:'active',sections:[{title:'Introduction',description:'Welcome to the course',order:0,questions:[{text:'Are you ready to begin?',type:'boolean',options:[],required:true}]}]});// Categories for course form\nconst categories=['Post Construction Cleaning','Office Cleaning','Childcare Cleaning','School Cleaning','Customer Service Cleaning'];useEffect(()=>{const fetchCourses=async()=>{if(!currentUser||!isAdmin)return;try{setLoading(true);const result=await getCourses();if(result.success){setCourses(result.courses);}else{setError('Failed to fetch courses');}}catch(err){setError('Error fetching courses: '+err.message);}finally{setLoading(false);}};fetchCourses();},[currentUser,isAdmin]);// Filter courses based on search term and category filter\nconst filteredCourses=courses.filter(course=>{const matchesSearch=course.title.toLowerCase().includes(searchTerm.toLowerCase())||course.description.toLowerCase().includes(searchTerm.toLowerCase());const matchesCategory=categoryFilter?course.category===categoryFilter:true;return matchesSearch&&matchesCategory;});const handleSearchChange=e=>{setSearchTerm(e.target.value);};const handleCategoryFilterChange=e=>{setCategoryFilter(e.target.value);};const clearFilters=()=>{setSearchTerm('');setCategoryFilter('');};const handleInputChange=e=>{const{name,value}=e.target;setCourseForm({...courseForm,[name]:value});};const handleSectionChange=(index,field,value)=>{const updatedSections=[...courseForm.sections];updatedSections[index]={...updatedSections[index],[field]:value};setCourseForm({...courseForm,sections:updatedSections});};const handleQuestionChange=(sectionIndex,questionIndex,field,value)=>{const updatedSections=[...courseForm.sections];const updatedQuestions=[...updatedSections[sectionIndex].questions];updatedQuestions[questionIndex]={...updatedQuestions[questionIndex],[field]:value};updatedSections[sectionIndex]={...updatedSections[sectionIndex],questions:updatedQuestions};setCourseForm({...courseForm,sections:updatedSections});};const addSection=()=>{const newSection={title:`Section ${courseForm.sections.length+1}`,description:'',order:courseForm.sections.length,questions:[{text:'Question 1',type:'text',options:[],required:true}]};setCourseForm({...courseForm,sections:[...courseForm.sections,newSection]});};const removeSection=index=>{if(courseForm.sections.length<=1){setError('Course must have at least one section');return;}const updatedSections=courseForm.sections.filter((_,i)=>i!==index);// Update order of remaining sections\nupdatedSections.forEach((section,i)=>{section.order=i;});setCourseForm({...courseForm,sections:updatedSections});};const addQuestion=sectionIndex=>{const updatedSections=[...courseForm.sections];const currentQuestions=updatedSections[sectionIndex].questions;const newQuestion={text:`Question ${currentQuestions.length+1}`,type:'text',options:[],required:true};updatedSections[sectionIndex]={...updatedSections[sectionIndex],questions:[...currentQuestions,newQuestion]};setCourseForm({...courseForm,sections:updatedSections});};const removeQuestion=(sectionIndex,questionIndex)=>{if(courseForm.sections[sectionIndex].questions.length<=1){setError('Section must have at least one question');return;}const updatedSections=[...courseForm.sections];const updatedQuestions=updatedSections[sectionIndex].questions.filter((_,i)=>i!==questionIndex);updatedSections[sectionIndex]={...updatedSections[sectionIndex],questions:updatedQuestions};setCourseForm({...courseForm,sections:updatedSections});};const addOption=(sectionIndex,questionIndex)=>{const updatedSections=[...courseForm.sections];const currentQuestion=updatedSections[sectionIndex].questions[questionIndex];const currentOptions=currentQuestion.options||[];const newOption=`Option ${currentOptions.length+1}`;updatedSections[sectionIndex].questions[questionIndex]={...currentQuestion,options:[...currentOptions,newOption]};setCourseForm({...courseForm,sections:updatedSections});};const handleOptionChange=(sectionIndex,questionIndex,optionIndex,value)=>{const updatedSections=[...courseForm.sections];const currentQuestion=updatedSections[sectionIndex].questions[questionIndex];const updatedOptions=[...currentQuestion.options];updatedOptions[optionIndex]=value;updatedSections[sectionIndex].questions[questionIndex]={...currentQuestion,options:updatedOptions};setCourseForm({...courseForm,sections:updatedSections});};const removeOption=(sectionIndex,questionIndex,optionIndex)=>{const updatedSections=[...courseForm.sections];const currentQuestion=updatedSections[sectionIndex].questions[questionIndex];if(currentQuestion.options.length<=2){setError('Multiple choice questions must have at least two options');return;}const updatedOptions=currentQuestion.options.filter((_,i)=>i!==optionIndex);updatedSections[sectionIndex].questions[questionIndex]={...currentQuestion,options:updatedOptions};setCourseForm({...courseForm,sections:updatedSections});};const resetForm=()=>{setCourseForm({title:'',description:'',category:'',imageUrl:'',status:'active',sections:[{title:'Introduction',description:'Welcome to the course',order:0,questions:[{text:'Are you ready to begin?',type:'boolean',options:[],required:true}]}]});};const handleEditCourse=course=>{setCourseForm({title:course.title,description:course.description,category:course.category,imageUrl:course.imageUrl||'',status:course.status||'active',sections:course.sections||[{title:'Introduction',description:'Welcome to the course',order:0,questions:[{text:'Are you ready to begin?',type:'boolean',options:[],required:true}]}]});setEditingCourseId(course.id);setShowNewCourseForm(true);};const handleSubmit=async e=>{e.preventDefault();// Validate form\nif(!courseForm.title||!courseForm.description||!courseForm.category){setError('Please fill in all required fields');return;}// Validate sections and questions\nfor(const section of courseForm.sections){if(!section.title){setError('All sections must have a title');return;}for(const question of section.questions){if(!question.text){setError('All questions must have text');return;}if(question.type==='multiple-choice'&&(!question.options||question.options.length<2)){setError('Multiple choice questions must have at least two options');return;}}}try{setLoading(true);let result;if(editingCourseId){// Update existing course\nresult=await updateCourse(editingCourseId,courseForm);}else{// Create new course\nresult=await createCourse(courseForm);}if(result.success){// Refresh course list\nconst coursesResult=await getCourses();if(coursesResult.success){setCourses(coursesResult.courses);}// Reset form and state\nresetForm();setShowNewCourseForm(false);setEditingCourseId(null);}else{setError(result.error||'Failed to save course');}}catch(err){setError('Error saving course: '+err.message);}finally{setLoading(false);}};const handleCancel=()=>{resetForm();setShowNewCourseForm(false);setEditingCourseId(null);};if(!isAdmin){return/*#__PURE__*/_jsx(\"div\",{className:\"admin-courses-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You do not have permission to access the admin courses page.\"}),/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"back-link\",children:\"Return to Dashboard\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-courses-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"admin-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Training Courses\"}),/*#__PURE__*/_jsx(\"button\",{className:\"new-course-button\",onClick:()=>{resetForm();setShowNewCourseForm(true);setEditingCourseId(null);},children:\"Create New Course\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),showNewCourseForm?/*#__PURE__*/_jsxs(\"div\",{className:\"course-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingCourseId?'Edit Course':'Create New Course'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Course Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Course Title*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",name:\"title\",value:courseForm.title,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description*\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",value:courseForm.description,onChange:handleInputChange,rows:4,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category\",children:\"Category*\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category\",name:\"category\",value:courseForm.category,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"status\",children:\"Status*\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"status\",name:\"status\",value:courseForm.status,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"active\",children:\"Active\"}),/*#__PURE__*/_jsx(\"option\",{value:\"inactive\",children:\"Inactive\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"imageUrl\",children:\"Image URL (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"imageUrl\",name:\"imageUrl\",value:courseForm.imageUrl,onChange:handleInputChange,placeholder:\"https://example.com/image.jpg\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Course Content\"}),/*#__PURE__*/_jsx(\"p\",{className:\"help-text\",children:\"Create sections with up to 3 questions each in a Typeform-like format.\"}),courseForm.sections.map((section,sectionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"section-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Section \",sectionIndex+1]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-button\",onClick:()=>removeSection(sectionIndex),children:\"Remove Section\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:`section-${sectionIndex}-title`,children:\"Section Title*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:`section-${sectionIndex}-title`,value:section.title,onChange:e=>handleSectionChange(sectionIndex,'title',e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:`section-${sectionIndex}-description`,children:\"Section Description*\"}),/*#__PURE__*/_jsx(\"textarea\",{id:`section-${sectionIndex}-description`,value:section.description,onChange:e=>handleSectionChange(sectionIndex,'description',e.target.value),rows:2,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"questions-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Questions\"}),section.questions.map((question,questionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"h6\",{children:[\"Question \",questionIndex+1]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-button\",onClick:()=>removeQuestion(sectionIndex,questionIndex),children:\"Remove\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:`question-${sectionIndex}-${questionIndex}-text`,children:\"Question Text*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:`question-${sectionIndex}-${questionIndex}-text`,value:question.text,onChange:e=>handleQuestionChange(sectionIndex,questionIndex,'text',e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:`question-${sectionIndex}-${questionIndex}-type`,children:\"Question Type*\"}),/*#__PURE__*/_jsxs(\"select\",{id:`question-${sectionIndex}-${questionIndex}-type`,value:question.type,onChange:e=>handleQuestionChange(sectionIndex,questionIndex,'type',e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"text\",children:\"Text Answer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"multiple-choice\",children:\"Multiple Choice\"}),/*#__PURE__*/_jsx(\"option\",{value:\"boolean\",children:\"True/False\"})]})]}),question.type==='multiple-choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"options-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Options*\"}),(question.options||[]).map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"option-row\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option,onChange:e=>handleOptionChange(sectionIndex,questionIndex,optionIndex,e.target.value),placeholder:`Option ${optionIndex+1}`,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-option-button\",onClick:()=>removeOption(sectionIndex,questionIndex,optionIndex),children:\"\\u2715\"})]},optionIndex)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-option-button\",onClick:()=>addOption(sectionIndex,questionIndex),children:\"Add Option\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group checkbox-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`question-${sectionIndex}-${questionIndex}-required`,checked:question.required,onChange:e=>handleQuestionChange(sectionIndex,questionIndex,'required',e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`question-${sectionIndex}-${questionIndex}-required`,children:\"Required\"})]})]},questionIndex)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-question-button\",onClick:()=>addQuestion(sectionIndex),children:\"Add Question\"})]})]},sectionIndex)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-section-button\",onClick:addSection,children:\"Add Section\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"cancel-button\",onClick:handleCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:loading,children:loading?'Saving...':editingCourseId?'Update Course':'Create Course'})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"courses-filters\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search courses...\",value:searchTerm,onChange:handleSearchChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category-filter\",children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category-filter\",value:categoryFilter,onChange:handleCategoryFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-button\",onClick:clearFilters,children:\"Clear Filters\"})]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading courses...\"})]}):filteredCourses.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-courses-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No courses found matching your criteria.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-button\",onClick:clearFilters,children:\"Clear Filters\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"courses-grid\",children:filteredCourses.map(course=>/*#__PURE__*/_jsxs(\"div\",{className:\"admin-course-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-image\",children:[course.imageUrl?/*#__PURE__*/_jsx(\"img\",{src:course.imageUrl,alt:course.title}):/*#__PURE__*/_jsx(\"div\",{className:\"placeholder-image\",children:/*#__PURE__*/_jsx(\"span\",{children:course.title.charAt(0)})}),/*#__PURE__*/_jsx(\"div\",{className:\"course-category\",children:course.category}),/*#__PURE__*/_jsx(\"div\",{className:`course-status ${course.status}`,children:course.status==='active'?'Active':'Inactive'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.title}),/*#__PURE__*/_jsx(\"p\",{className:\"course-description\",children:course.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[course.sections?course.sections.length:0,\" Sections\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[course.enrollments||0,\" Enrollments\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit-button\",onClick:()=>handleEditCourse(course),children:\"Edit Course\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-button\",onClick:()=>navigate(`/admin/courses/${course.id}/progress`),children:\"View Progress\"})]})]})]},course.id))})]})]});};export default AdminCourses;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","getCourses","createCourse","updateCourse","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminCourses","currentUser","isAdmin","navigate","courses","setCourses","loading","setLoading","error","setError","showNewCourseForm","setShowNewCourseForm","editingCourseId","setEditingCourseId","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","courseForm","setCourseForm","title","description","category","imageUrl","status","sections","order","questions","text","type","options","required","categories","fetchCourses","result","success","err","message","filteredCourses","filter","course","matchesSearch","toLowerCase","includes","matchesCategory","handleSearchChange","e","target","value","handleCategoryFilterChange","clearFilters","handleInputChange","name","handleSectionChange","index","field","updatedSections","handleQuestionChange","sectionIndex","questionIndex","updatedQuestions","addSection","newSection","length","removeSection","_","i","forEach","section","addQuestion","currentQuestions","newQuestion","removeQuestion","addOption","currentQuestion","currentOptions","newOption","handleOptionChange","optionIndex","updatedOptions","removeOption","resetForm","handleEditCourse","id","handleSubmit","preventDefault","question","coursesResult","handleCancel","className","children","to","onClick","onSubmit","htmlFor","onChange","rows","map","placeholder","option","checked","disabled","src","alt","charAt","enrollments"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/pages/AdminCourses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getCourses, createCourse, updateCourse } from '../firebase/firestore';\nimport { useAuth } from '../components/AuthContext';\nimport '../styles/AdminCourses.css';\n\nconst AdminCourses = () => {\n  const { currentUser, isAdmin } = useAuth();\n  const navigate = useNavigate();\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showNewCourseForm, setShowNewCourseForm] = useState(false);\n  const [editingCourseId, setEditingCourseId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  \n  // New/Edit course form state\n  const [courseForm, setCourseForm] = useState({\n    title: '',\n    description: '',\n    category: '',\n    imageUrl: '',\n    status: 'active',\n    sections: [\n      {\n        title: 'Introduction',\n        description: 'Welcome to the course',\n        order: 0,\n        questions: [\n          {\n            text: 'Are you ready to begin?',\n            type: 'boolean',\n            options: [],\n            required: true\n          }\n        ]\n      }\n    ]\n  });\n\n  // Categories for course form\n  const categories = [\n    'Post Construction Cleaning',\n    'Office Cleaning',\n    'Childcare Cleaning',\n    'School Cleaning',\n    'Customer Service Cleaning'\n  ];\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      if (!currentUser || !isAdmin) return;\n      \n      try {\n        setLoading(true);\n        const result = await getCourses();\n        \n        if (result.success) {\n          setCourses(result.courses);\n        } else {\n          setError('Failed to fetch courses');\n        }\n      } catch (err) {\n        setError('Error fetching courses: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCourses();\n  }, [currentUser, isAdmin]);\n\n  // Filter courses based on search term and category filter\n  const filteredCourses = courses.filter(course => {\n    const matchesSearch = \n      course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      course.description.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory = categoryFilter ? course.category === categoryFilter : true;\n    \n    return matchesSearch && matchesCategory;\n  });\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleCategoryFilterChange = (e) => {\n    setCategoryFilter(e.target.value);\n  };\n\n  const clearFilters = () => {\n    setSearchTerm('');\n    setCategoryFilter('');\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCourseForm({\n      ...courseForm,\n      [name]: value\n    });\n  };\n\n  const handleSectionChange = (index, field, value) => {\n    const updatedSections = [...courseForm.sections];\n    updatedSections[index] = {\n      ...updatedSections[index],\n      [field]: value\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const handleQuestionChange = (sectionIndex, questionIndex, field, value) => {\n    const updatedSections = [...courseForm.sections];\n    const updatedQuestions = [...updatedSections[sectionIndex].questions];\n    \n    updatedQuestions[questionIndex] = {\n      ...updatedQuestions[questionIndex],\n      [field]: value\n    };\n    \n    updatedSections[sectionIndex] = {\n      ...updatedSections[sectionIndex],\n      questions: updatedQuestions\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const addSection = () => {\n    const newSection = {\n      title: `Section ${courseForm.sections.length + 1}`,\n      description: '',\n      order: courseForm.sections.length,\n      questions: [\n        {\n          text: 'Question 1',\n          type: 'text',\n          options: [],\n          required: true\n        }\n      ]\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: [...courseForm.sections, newSection]\n    });\n  };\n\n  const removeSection = (index) => {\n    if (courseForm.sections.length <= 1) {\n      setError('Course must have at least one section');\n      return;\n    }\n    \n    const updatedSections = courseForm.sections.filter((_, i) => i !== index);\n    // Update order of remaining sections\n    updatedSections.forEach((section, i) => {\n      section.order = i;\n    });\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const addQuestion = (sectionIndex) => {\n    const updatedSections = [...courseForm.sections];\n    const currentQuestions = updatedSections[sectionIndex].questions;\n    \n    const newQuestion = {\n      text: `Question ${currentQuestions.length + 1}`,\n      type: 'text',\n      options: [],\n      required: true\n    };\n    \n    updatedSections[sectionIndex] = {\n      ...updatedSections[sectionIndex],\n      questions: [...currentQuestions, newQuestion]\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const removeQuestion = (sectionIndex, questionIndex) => {\n    if (courseForm.sections[sectionIndex].questions.length <= 1) {\n      setError('Section must have at least one question');\n      return;\n    }\n    \n    const updatedSections = [...courseForm.sections];\n    const updatedQuestions = updatedSections[sectionIndex].questions.filter((_, i) => i !== questionIndex);\n    \n    updatedSections[sectionIndex] = {\n      ...updatedSections[sectionIndex],\n      questions: updatedQuestions\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const addOption = (sectionIndex, questionIndex) => {\n    const updatedSections = [...courseForm.sections];\n    const currentQuestion = updatedSections[sectionIndex].questions[questionIndex];\n    const currentOptions = currentQuestion.options || [];\n    \n    const newOption = `Option ${currentOptions.length + 1}`;\n    \n    updatedSections[sectionIndex].questions[questionIndex] = {\n      ...currentQuestion,\n      options: [...currentOptions, newOption]\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const handleOptionChange = (sectionIndex, questionIndex, optionIndex, value) => {\n    const updatedSections = [...courseForm.sections];\n    const currentQuestion = updatedSections[sectionIndex].questions[questionIndex];\n    const updatedOptions = [...currentQuestion.options];\n    \n    updatedOptions[optionIndex] = value;\n    \n    updatedSections[sectionIndex].questions[questionIndex] = {\n      ...currentQuestion,\n      options: updatedOptions\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const removeOption = (sectionIndex, questionIndex, optionIndex) => {\n    const updatedSections = [...courseForm.sections];\n    const currentQuestion = updatedSections[sectionIndex].questions[questionIndex];\n    \n    if (currentQuestion.options.length <= 2) {\n      setError('Multiple choice questions must have at least two options');\n      return;\n    }\n    \n    const updatedOptions = currentQuestion.options.filter((_, i) => i !== optionIndex);\n    \n    updatedSections[sectionIndex].questions[questionIndex] = {\n      ...currentQuestion,\n      options: updatedOptions\n    };\n    \n    setCourseForm({\n      ...courseForm,\n      sections: updatedSections\n    });\n  };\n\n  const resetForm = () => {\n    setCourseForm({\n      title: '',\n      description: '',\n      category: '',\n      imageUrl: '',\n      status: 'active',\n      sections: [\n        {\n          title: 'Introduction',\n          description: 'Welcome to the course',\n          order: 0,\n          questions: [\n            {\n              text: 'Are you ready to begin?',\n              type: 'boolean',\n              options: [],\n              required: true\n            }\n          ]\n        }\n      ]\n    });\n  };\n\n  const handleEditCourse = (course) => {\n    setCourseForm({\n      title: course.title,\n      description: course.description,\n      category: course.category,\n      imageUrl: course.imageUrl || '',\n      status: course.status || 'active',\n      sections: course.sections || [\n        {\n          title: 'Introduction',\n          description: 'Welcome to the course',\n          order: 0,\n          questions: [\n            {\n              text: 'Are you ready to begin?',\n              type: 'boolean',\n              options: [],\n              required: true\n            }\n          ]\n        }\n      ]\n    });\n    \n    setEditingCourseId(course.id);\n    setShowNewCourseForm(true);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    if (!courseForm.title || !courseForm.description || !courseForm.category) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    \n    // Validate sections and questions\n    for (const section of courseForm.sections) {\n      if (!section.title) {\n        setError('All sections must have a title');\n        return;\n      }\n      \n      for (const question of section.questions) {\n        if (!question.text) {\n          setError('All questions must have text');\n          return;\n        }\n        \n        if (question.type === 'multiple-choice' && (!question.options || question.options.length < 2)) {\n          setError('Multiple choice questions must have at least two options');\n          return;\n        }\n      }\n    }\n    \n    try {\n      setLoading(true);\n      \n      let result;\n      \n      if (editingCourseId) {\n        // Update existing course\n        result = await updateCourse(editingCourseId, courseForm);\n      } else {\n        // Create new course\n        result = await createCourse(courseForm);\n      }\n      \n      if (result.success) {\n        // Refresh course list\n        const coursesResult = await getCourses();\n        if (coursesResult.success) {\n          setCourses(coursesResult.courses);\n        }\n        \n        // Reset form and state\n        resetForm();\n        setShowNewCourseForm(false);\n        setEditingCourseId(null);\n      } else {\n        setError(result.error || 'Failed to save course');\n      }\n    } catch (err) {\n      setError('Error saving course: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    setShowNewCourseForm(false);\n    setEditingCourseId(null);\n  };\n\n  if (!isAdmin) {\n    return (\n      <div className=\"admin-courses-container\">\n        <div className=\"error-message\">\n          <h2>Access Denied</h2>\n          <p>You do not have permission to access the admin courses page.</p>\n          <Link to=\"/dashboard\" className=\"back-link\">Return to Dashboard</Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-courses-container\">\n      <div className=\"admin-header\">\n        <h1>Manage Training Courses</h1>\n        <button \n          className=\"new-course-button\"\n          onClick={() => {\n            resetForm();\n            setShowNewCourseForm(true);\n            setEditingCourseId(null);\n          }}\n        >\n          Create New Course\n        </button>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      {showNewCourseForm ? (\n        <div className=\"course-form-container\">\n          <h2>{editingCourseId ? 'Edit Course' : 'Create New Course'}</h2>\n          \n          <form onSubmit={handleSubmit} className=\"course-form\">\n            <div className=\"form-section\">\n              <h3>Course Details</h3>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Course Title*</label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  value={courseForm.title}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description*</label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={courseForm.description}\n                  onChange={handleInputChange}\n                  rows={4}\n                  required\n                />\n              </div>\n              \n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"category\">Category*</label>\n                  <select\n                    id=\"category\"\n                    name=\"category\"\n                    value={courseForm.category}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"\">Select Category</option>\n                    {categories.map(category => (\n                      <option key={category} value={category}>{category}</option>\n                    ))}\n                  </select>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"status\">Status*</label>\n                  <select\n                    id=\"status\"\n                    name=\"status\"\n                    value={courseForm.status}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"active\">Active</option>\n                    <option value=\"inactive\">Inactive</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"imageUrl\">Image URL (Optional)</label>\n                <input\n                  type=\"text\"\n                  id=\"imageUrl\"\n                  name=\"imageUrl\"\n                  value={courseForm.imageUrl}\n                  onChange={handleInputChange}\n                  placeholder=\"https://example.com/image.jpg\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Course Content</h3>\n              <p className=\"help-text\">Create sections with up to 3 questions each in a Typeform-like format.</p>\n              \n              {courseForm.sections.map((section, sectionIndex) => (\n                <div key={sectionIndex} className=\"section-container\">\n                  <div className=\"section-header\">\n                    <h4>Section {sectionIndex + 1}</h4>\n                    <button \n                      type=\"button\" \n                      className=\"remove-button\"\n                      onClick={() => removeSection(sectionIndex)}\n                    >\n                      Remove Section\n                    </button>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor={`section-${sectionIndex}-title`}>Section Title*</label>\n                    <input\n                      type=\"text\"\n                      id={`section-${sectionIndex}-title`}\n                      value={section.title}\n                      onChange={(e) => handleSectionChange(sectionIndex, 'title', e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor={`section-${sectionIndex}-description`}>Section Description*</label>\n                    <textarea\n                      id={`section-${sectionIndex}-description`}\n                      value={section.description}\n                      onChange={(e) => handleSectionChange(sectionIndex, 'description', e.target.value)}\n                      rows={2}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"questions-container\">\n                    <h5>Questions</h5>\n                    \n                    {section.questions.map((question, questionIndex) => (\n                      <div key={questionIndex} className=\"question-container\">\n                        <div className=\"question-header\">\n                          <h6>Question {questionIndex + 1}</h6>\n                          <button \n                            type=\"button\" \n                            className=\"remove-button\"\n                            onClick={() => removeQuestion(sectionIndex, questionIndex)}\n                          >\n                            Remove\n                          </button>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                          <label htmlFor={`question-${sectionIndex}-${questionIndex}-text`}>Question Text*</label>\n                          <input\n                            type=\"text\"\n                            id={`question-${sectionIndex}-${questionIndex}-text`}\n                            value={question.text}\n                            onChange={(e) => handleQuestionChange(sectionIndex, questionIndex, 'text', e.target.value)}\n                            required\n                          />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                          <label htmlFor={`question-${sectionIndex}-${questionIndex}-type`}>Question Type*</label>\n                          <select\n                            id={`question-${sectionIndex}-${questionIndex}-type`}\n                            value={question.type}\n                            onChange={(e) => handleQuestionChange(sectionIndex, questionIndex, 'type', e.target.value)}\n                            required\n                          >\n                            <option value=\"text\">Text Answer</option>\n                            <option value=\"multiple-choice\">Multiple Choice</option>\n                            <option value=\"boolean\">True/False</option>\n                          </select>\n                        </div>\n                        \n                        {question.type === 'multiple-choice' && (\n                          <div className=\"options-container\">\n                            <label>Options*</label>\n                            {(question.options || []).map((option, optionIndex) => (\n                              <div key={optionIndex} className=\"option-row\">\n                                <input\n                                  type=\"text\"\n                                  value={option}\n                                  onChange={(e) => handleOptionChange(sectionIndex, questionIndex, optionIndex, e.target.value)}\n                                  placeholder={`Option ${optionIndex + 1}`}\n                                  required\n                                />\n                                <button \n                                  type=\"button\" \n                                  className=\"remove-option-button\"\n                                  onClick={() => removeOption(sectionIndex, questionIndex, optionIndex)}\n                                >\n                                  ✕\n                                </button>\n                              </div>\n                            ))}\n                            <button \n                              type=\"button\" \n                              className=\"add-option-button\"\n                              onClick={() => addOption(sectionIndex, questionIndex)}\n                            >\n                              Add Option\n                            </button>\n                          </div>\n                        )}\n                        \n                        <div className=\"form-group checkbox-group\">\n                          <input\n                            type=\"checkbox\"\n                            id={`question-${sectionIndex}-${questionIndex}-required`}\n                            checked={question.required}\n                            onChange={(e) => handleQuestionChange(sectionIndex, questionIndex, 'required', e.target.checked)}\n                          />\n                          <label htmlFor={`question-${sectionIndex}-${questionIndex}-required`}>Required</label>\n                        </div>\n                      </div>\n                    ))}\n                    \n                    <button \n                      type=\"button\" \n                      className=\"add-question-button\"\n                      onClick={() => addQuestion(sectionIndex)}\n                    >\n                      Add Question\n                    </button>\n                  </div>\n                </div>\n              ))}\n              \n              <button \n                type=\"button\" \n                className=\"add-section-button\"\n                onClick={addSection}\n              >\n                Add Section\n              </button>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"button\" className=\"cancel-button\" onClick={handleCancel}>\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n                {loading ? 'Saving...' : (editingCourseId ? 'Update Course' : 'Create Course')}\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <>\n          <div className=\"courses-filters\">\n            <div className=\"search-bar\">\n              <input\n                type=\"text\"\n                placeholder=\"Search courses...\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n            </div>\n            \n            <div className=\"filter-options\">\n              <div className=\"filter-group\">\n                <label htmlFor=\"category-filter\">Category:</label>\n                <select\n                  id=\"category-filter\"\n                  value={categoryFilter}\n                  onChange={handleCategoryFilterChange}\n                >\n                  <option value=\"\">All Categories</option>\n                  {categories.map(category => (\n                    <option key={category} value={category}>{category}</option>\n                  ))}\n                </select>\n              </div>\n              \n              <button className=\"clear-filters-button\" onClick={clearFilters}>\n                Clear Filters\n              </button>\n            </div>\n          </div>\n          \n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading courses...</p>\n            </div>\n          ) : filteredCourses.length === 0 ? (\n            <div className=\"no-courses-message\">\n              <p>No courses found matching your criteria.</p>\n              <button className=\"clear-filters-button\" onClick={clearFilters}>\n                Clear Filters\n              </button>\n            </div>\n          ) : (\n            <div className=\"courses-grid\">\n              {filteredCourses.map(course => (\n                <div key={course.id} className=\"admin-course-card\">\n                  <div className=\"course-image\">\n                    {course.imageUrl ? (\n                      <img src={course.imageUrl} alt={course.title} />\n                    ) : (\n                      <div className=\"placeholder-image\">\n                        <span>{course.title.charAt(0)}</span>\n                      </div>\n                    )}\n                    <div className=\"course-category\">{course.category}</div>\n                    <div className={`course-status ${course.status}`}>\n                      {course.status === 'active' ? 'Active' : 'Inactive'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"course-content\">\n                    <h3>{course.title}</h3>\n                    <p className=\"course-description\">{course.description}</p>\n                    \n                    <div className=\"course-meta\">\n                      <span>{course.sections ? course.sections.length : 0} Sections</span>\n                      <span>{course.enrollments || 0} Enrollments</span>\n                    </div>\n                    \n                    <div className=\"course-actions\">\n                      <button \n                        className=\"edit-button\"\n                        onClick={() => handleEditCourse(course)}\n                      >\n                        Edit Course\n                      </button>\n                      <button \n                        className=\"view-button\"\n                        onClick={() => navigate(`/admin/courses/${course.id}/progress`)}\n                      >\n                        View Progress\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AdminCourses;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}