{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{getJobs}from'../firebase/firestore';import JobCard from'../components/JobCard';import'../styles/JobListings.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobListings=()=>{const[jobs,setJobs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[searchTerm,setSearchTerm]=useState('');const[categoryFilter,setCategoryFilter]=useState('');const[locationFilter,setLocationFilter]=useState('');// Categories for filtering\nconst categories=['Post Construction','Office','Childcare','School','Residential','Commercial'];// Locations for filtering\nconst locations=['Brisbane','Gold Coast','Sunshine Coast','Sydney','Melbourne','Perth'];useEffect(()=>{const fetchJobs=async()=>{try{setLoading(true);const filters={};if(categoryFilter){filters.category=categoryFilter;}if(locationFilter){filters.location=locationFilter;}const result=await getJobs(filters);if(result.success){setJobs(result.jobs);}else{setError('Failed to fetch job listings');}}catch(err){setError('Error fetching job listings: '+err.message);}finally{setLoading(false);}};fetchJobs();},[categoryFilter,locationFilter]);// Filter jobs based on search term\nconst filteredJobs=jobs.filter(job=>{const searchTermLower=searchTerm.toLowerCase();return job.title.toLowerCase().includes(searchTermLower)||job.project.toLowerCase().includes(searchTermLower)||job.location.toLowerCase().includes(searchTermLower)||job.description.toLowerCase().includes(searchTermLower);});const handleSearchChange=e=>{setSearchTerm(e.target.value);};const handleCategoryChange=e=>{setCategoryFilter(e.target.value);};const handleLocationChange=e=>{setLocationFilter(e.target.value);};const clearFilters=()=>{setSearchTerm('');setCategoryFilter('');setLocationFilter('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"job-listings-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Available Jobs\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-filters\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search jobs...\",value:searchTerm,onChange:handleSearchChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category-filter\",children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category-filter\",value:categoryFilter,onChange:handleCategoryChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"location-filter\",children:\"Location:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"location-filter\",value:locationFilter,onChange:handleLocationChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Locations\"}),locations.map(location=>/*#__PURE__*/_jsx(\"option\",{value:location,children:location},location))]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-button\",onClick:clearFilters,children:\"Clear Filters\"})]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading job listings...\"})]}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}):filteredJobs.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-jobs-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No jobs found matching your criteria.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-button\",onClick:clearFilters,children:\"Clear Filters\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"jobs-grid\",children:filteredJobs.map(job=>/*#__PURE__*/_jsx(Link,{to:`/jobs/${job.id}`,className:\"job-card-link\",children:/*#__PURE__*/_jsx(JobCard,{job:job})},job.id))})]});};export default JobListings;","map":{"version":3,"names":["React","useState","useEffect","Link","getJobs","JobCard","jsx","_jsx","jsxs","_jsxs","JobListings","jobs","setJobs","loading","setLoading","error","setError","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","locationFilter","setLocationFilter","categories","locations","fetchJobs","filters","category","location","result","success","err","message","filteredJobs","filter","job","searchTermLower","toLowerCase","title","includes","project","description","handleSearchChange","e","target","value","handleCategoryChange","handleLocationChange","clearFilters","className","children","type","placeholder","onChange","htmlFor","id","map","onClick","length","to"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/pages/JobListings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getJobs } from '../firebase/firestore';\nimport JobCard from '../components/JobCard';\nimport '../styles/JobListings.css';\n\nconst JobListings = () => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [locationFilter, setLocationFilter] = useState('');\n\n  // Categories for filtering\n  const categories = [\n    'Post Construction',\n    'Office',\n    'Childcare',\n    'School',\n    'Residential',\n    'Commercial'\n  ];\n\n  // Locations for filtering\n  const locations = [\n    'Brisbane',\n    'Gold Coast',\n    'Sunshine Coast',\n    'Sydney',\n    'Melbourne',\n    'Perth'\n  ];\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        setLoading(true);\n        const filters = {};\n        \n        if (categoryFilter) {\n          filters.category = categoryFilter;\n        }\n        \n        if (locationFilter) {\n          filters.location = locationFilter;\n        }\n        \n        const result = await getJobs(filters);\n        \n        if (result.success) {\n          setJobs(result.jobs);\n        } else {\n          setError('Failed to fetch job listings');\n        }\n      } catch (err) {\n        setError('Error fetching job listings: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, [categoryFilter, locationFilter]);\n\n  // Filter jobs based on search term\n  const filteredJobs = jobs.filter(job => {\n    const searchTermLower = searchTerm.toLowerCase();\n    return (\n      job.title.toLowerCase().includes(searchTermLower) ||\n      job.project.toLowerCase().includes(searchTermLower) ||\n      job.location.toLowerCase().includes(searchTermLower) ||\n      job.description.toLowerCase().includes(searchTermLower)\n    );\n  });\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleCategoryChange = (e) => {\n    setCategoryFilter(e.target.value);\n  };\n\n  const handleLocationChange = (e) => {\n    setLocationFilter(e.target.value);\n  };\n\n  const clearFilters = () => {\n    setSearchTerm('');\n    setCategoryFilter('');\n    setLocationFilter('');\n  };\n\n  return (\n    <div className=\"job-listings-container\">\n      <h1>Available Jobs</h1>\n      \n      <div className=\"job-filters\">\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search jobs...\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n          />\n        </div>\n        \n        <div className=\"filter-options\">\n          <div className=\"filter-group\">\n            <label htmlFor=\"category-filter\">Category:</label>\n            <select\n              id=\"category-filter\"\n              value={categoryFilter}\n              onChange={handleCategoryChange}\n            >\n              <option value=\"\">All Categories</option>\n              {categories.map(category => (\n                <option key={category} value={category}>{category}</option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"filter-group\">\n            <label htmlFor=\"location-filter\">Location:</label>\n            <select\n              id=\"location-filter\"\n              value={locationFilter}\n              onChange={handleLocationChange}\n            >\n              <option value=\"\">All Locations</option>\n              {locations.map(location => (\n                <option key={location} value={location}>{location}</option>\n              ))}\n            </select>\n          </div>\n          \n          <button className=\"clear-filters-button\" onClick={clearFilters}>\n            Clear Filters\n          </button>\n        </div>\n      </div>\n      \n      {loading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading job listings...</p>\n        </div>\n      ) : error ? (\n        <div className=\"error-message\">{error}</div>\n      ) : filteredJobs.length === 0 ? (\n        <div className=\"no-jobs-message\">\n          <p>No jobs found matching your criteria.</p>\n          <button className=\"clear-filters-button\" onClick={clearFilters}>\n            Clear Filters\n          </button>\n        </div>\n      ) : (\n        <div className=\"jobs-grid\">\n          {filteredJobs.map(job => (\n            <Link to={`/jobs/${job.id}`} key={job.id} className=\"job-card-link\">\n              <JobCard job={job} />\n            </Link>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default JobListings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}