{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{getCourseById,updateCourseProgress}from'../firebase/firestore';import{useAuth}from'../components/AuthContext';import'../styles/CourseContent.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CourseContent=()=>{const{id}=useParams();const navigate=useNavigate();const{currentUser}=useAuth();const[course,setCourse]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[currentSection,setCurrentSection]=useState(0);const[currentQuestion,setCurrentQuestion]=useState(0);const[answers,setAnswers]=useState({});const[saving,setSaving]=useState(false);const[saveError,setSaveError]=useState('');const[completed,setCompleted]=useState(false);useEffect(()=>{const fetchCourseDetails=async()=>{try{setLoading(true);const result=await getCourseById(id);if(result.success){setCourse(result.course);// Initialize answers if there's existing progress\nif(result.course.progress){setAnswers(result.course.progress.answers||{});setCurrentSection(result.course.progress.currentSection||0);setCurrentQuestion(result.course.progress.currentQuestion||0);setCompleted(result.course.progress.completed||false);}}else{setError('Failed to fetch course details');}}catch(err){setError('Error fetching course details: '+err.message);}finally{setLoading(false);}};fetchCourseDetails();},[id]);const handleAnswerChange=value=>{const questionKey=`${currentSection}_${currentQuestion}`;setAnswers({...answers,[questionKey]:value});};const handleNext=async()=>{if(!course||!course.sections)return;const currentSectionData=course.sections[currentSection];if(!currentSectionData)return;// Check if we're at the last question of the current section\nif(currentQuestion>=currentSectionData.questions.length-1){// If we're at the last section, mark as completed\nif(currentSection>=course.sections.length-1){await saveProgress(true);setCompleted(true);}else{// Move to the next section, first question\nsetCurrentSection(currentSection+1);setCurrentQuestion(0);await saveProgress();}}else{// Move to the next question in the current section\nsetCurrentQuestion(currentQuestion+1);await saveProgress();}};const handlePrevious=async()=>{if(currentQuestion>0){// Move to the previous question in the current section\nsetCurrentQuestion(currentQuestion-1);}else if(currentSection>0){// Move to the last question of the previous section\nconst prevSection=course.sections[currentSection-1];setCurrentSection(currentSection-1);setCurrentQuestion(prevSection.questions.length-1);}await saveProgress();};const saveProgress=async function(){let isCompleted=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(!currentUser||!course)return;try{setSaving(true);setSaveError('');// Calculate completion percentage\nconst totalQuestions=course.sections.reduce((total,section)=>total+section.questions.length,0);const answeredQuestions=Object.keys(answers).length;const completionPercentage=Math.round(answeredQuestions/totalQuestions*100);const progressData={currentSection,currentQuestion,answers,completionPercentage,completed:isCompleted,completedAt:isCompleted?new Date().toISOString():null};const result=await updateCourseProgress(currentUser.uid,course.id,progressData);if(!result.success){setSaveError(result.error||'Failed to save progress');}}catch(err){setSaveError('Error saving progress: '+err.message);}finally{setSaving(false);}};const handleFinish=()=>{navigate('/completed-courses');};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading course content...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"course-content-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate('/training'),children:\"Back to Courses\"})]});}if(!course){return/*#__PURE__*/_jsxs(\"div\",{className:\"course-content-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:\"Course not found\"}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate('/training'),children:\"Back to Courses\"})]});}// If the course is completed, show completion screen\nif(completed){return/*#__PURE__*/_jsx(\"div\",{className:\"course-content-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"course-completion\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Congratulations!\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"You've completed the \",course.title,\" course\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"You have successfully completed all sections of this training course.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"finish-button\",onClick:handleFinish,children:\"View Completed Courses\"}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate('/training'),children:\"Back to Courses\"})]})});}// Get current section and question data\nconst currentSectionData=course.sections[currentSection];const currentQuestionData=currentSectionData===null||currentSectionData===void 0?void 0:currentSectionData.questions[currentQuestion];const questionKey=`${currentSection}_${currentQuestion}`;const currentAnswer=answers[questionKey]||'';return/*#__PURE__*/_jsxs(\"div\",{className:\"course-content-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate('/training'),children:\"Back to Courses\"}),/*#__PURE__*/_jsx(\"h1\",{children:course.title})]}),/*#__PURE__*/_jsx(\"div\",{className:\"course-progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-sections\",children:course.sections.map((section,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`progress-section ${index<currentSection?'completed':index===currentSection?'current':''}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-number\",children:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"section-title\",children:section.title})]},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-content-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentSectionData.title}),/*#__PURE__*/_jsx(\"p\",{children:currentSectionData.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Question \",currentQuestion+1,\" of \",currentSectionData.questions.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question\",children:[/*#__PURE__*/_jsx(\"p\",{children:currentQuestionData.text}),currentQuestionData.type==='multiple-choice'&&/*#__PURE__*/_jsx(\"div\",{className:\"multiple-choice\",children:currentQuestionData.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`option-${index}`,name:`question-${questionKey}`,value:option,checked:currentAnswer===option,onChange:()=>handleAnswerChange(option)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`option-${index}`,children:option})]},index))}),currentQuestionData.type==='text'&&/*#__PURE__*/_jsx(\"div\",{className:\"text-answer\",children:/*#__PURE__*/_jsx(\"textarea\",{value:currentAnswer,onChange:e=>handleAnswerChange(e.target.value),placeholder:\"Type your answer here...\",rows:4})}),currentQuestionData.type==='boolean'&&/*#__PURE__*/_jsxs(\"div\",{className:\"boolean-choice\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"option-true\",name:`question-${questionKey}`,value:\"true\",checked:currentAnswer==='true',onChange:()=>handleAnswerChange('true')}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"option-true\",children:\"True\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"option-false\",name:`question-${questionKey}`,value:\"false\",checked:currentAnswer==='false',onChange:()=>handleAnswerChange('false')}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"option-false\",children:\"False\"})]})]})]}),saveError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:saveError}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"prev-button\",onClick:handlePrevious,disabled:currentSection===0&&currentQuestion===0||saving,children:\"Previous\"}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",onClick:handleNext,disabled:saving,children:currentSection===course.sections.length-1&&currentQuestion===currentSectionData.questions.length-1?'Complete Course':'Next'})]})]})]})]});};export default CourseContent;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getCourseById","updateCourseProgress","useAuth","jsx","_jsx","jsxs","_jsxs","CourseContent","id","navigate","currentUser","course","setCourse","loading","setLoading","error","setError","currentSection","setCurrentSection","currentQuestion","setCurrentQuestion","answers","setAnswers","saving","setSaving","saveError","setSaveError","completed","setCompleted","fetchCourseDetails","result","success","progress","err","message","handleAnswerChange","value","questionKey","handleNext","sections","currentSectionData","questions","length","saveProgress","handlePrevious","prevSection","isCompleted","arguments","undefined","totalQuestions","reduce","total","section","answeredQuestions","Object","keys","completionPercentage","Math","round","progressData","completedAt","Date","toISOString","uid","handleFinish","className","children","onClick","title","currentQuestionData","currentAnswer","map","index","description","text","type","options","option","name","checked","onChange","htmlFor","e","target","placeholder","rows","disabled"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/pages/CourseContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getCourseById, updateCourseProgress } from '../firebase/firestore';\nimport { useAuth } from '../components/AuthContext';\nimport '../styles/CourseContent.css';\n\nconst CourseContent = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [saving, setSaving] = useState(false);\n  const [saveError, setSaveError] = useState('');\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    const fetchCourseDetails = async () => {\n      try {\n        setLoading(true);\n        const result = await getCourseById(id);\n        \n        if (result.success) {\n          setCourse(result.course);\n          \n          // Initialize answers if there's existing progress\n          if (result.course.progress) {\n            setAnswers(result.course.progress.answers || {});\n            setCurrentSection(result.course.progress.currentSection || 0);\n            setCurrentQuestion(result.course.progress.currentQuestion || 0);\n            setCompleted(result.course.progress.completed || false);\n          }\n        } else {\n          setError('Failed to fetch course details');\n        }\n      } catch (err) {\n        setError('Error fetching course details: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCourseDetails();\n  }, [id]);\n\n  const handleAnswerChange = (value) => {\n    const questionKey = `${currentSection}_${currentQuestion}`;\n    setAnswers({\n      ...answers,\n      [questionKey]: value\n    });\n  };\n\n  const handleNext = async () => {\n    if (!course || !course.sections) return;\n    \n    const currentSectionData = course.sections[currentSection];\n    if (!currentSectionData) return;\n    \n    // Check if we're at the last question of the current section\n    if (currentQuestion >= currentSectionData.questions.length - 1) {\n      // If we're at the last section, mark as completed\n      if (currentSection >= course.sections.length - 1) {\n        await saveProgress(true);\n        setCompleted(true);\n      } else {\n        // Move to the next section, first question\n        setCurrentSection(currentSection + 1);\n        setCurrentQuestion(0);\n        await saveProgress();\n      }\n    } else {\n      // Move to the next question in the current section\n      setCurrentQuestion(currentQuestion + 1);\n      await saveProgress();\n    }\n  };\n\n  const handlePrevious = async () => {\n    if (currentQuestion > 0) {\n      // Move to the previous question in the current section\n      setCurrentQuestion(currentQuestion - 1);\n    } else if (currentSection > 0) {\n      // Move to the last question of the previous section\n      const prevSection = course.sections[currentSection - 1];\n      setCurrentSection(currentSection - 1);\n      setCurrentQuestion(prevSection.questions.length - 1);\n    }\n    await saveProgress();\n  };\n\n  const saveProgress = async (isCompleted = false) => {\n    if (!currentUser || !course) return;\n    \n    try {\n      setSaving(true);\n      setSaveError('');\n      \n      // Calculate completion percentage\n      const totalQuestions = course.sections.reduce(\n        (total, section) => total + section.questions.length, \n        0\n      );\n      \n      const answeredQuestions = Object.keys(answers).length;\n      const completionPercentage = Math.round((answeredQuestions / totalQuestions) * 100);\n      \n      const progressData = {\n        currentSection,\n        currentQuestion,\n        answers,\n        completionPercentage,\n        completed: isCompleted,\n        completedAt: isCompleted ? new Date().toISOString() : null\n      };\n      \n      const result = await updateCourseProgress(currentUser.uid, course.id, progressData);\n      \n      if (!result.success) {\n        setSaveError(result.error || 'Failed to save progress');\n      }\n    } catch (err) {\n      setSaveError('Error saving progress: ' + err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleFinish = () => {\n    navigate('/completed-courses');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading course content...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"course-content-container\">\n        <div className=\"error-message\">{error}</div>\n        <button className=\"back-button\" onClick={() => navigate('/training')}>\n          Back to Courses\n        </button>\n      </div>\n    );\n  }\n\n  if (!course) {\n    return (\n      <div className=\"course-content-container\">\n        <div className=\"error-message\">Course not found</div>\n        <button className=\"back-button\" onClick={() => navigate('/training')}>\n          Back to Courses\n        </button>\n      </div>\n    );\n  }\n\n  // If the course is completed, show completion screen\n  if (completed) {\n    return (\n      <div className=\"course-content-container\">\n        <div className=\"course-completion\">\n          <h1>Congratulations!</h1>\n          <h2>You've completed the {course.title} course</h2>\n          <p>You have successfully completed all sections of this training course.</p>\n          <button className=\"finish-button\" onClick={handleFinish}>\n            View Completed Courses\n          </button>\n          <button className=\"back-button\" onClick={() => navigate('/training')}>\n            Back to Courses\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Get current section and question data\n  const currentSectionData = course.sections[currentSection];\n  const currentQuestionData = currentSectionData?.questions[currentQuestion];\n  const questionKey = `${currentSection}_${currentQuestion}`;\n  const currentAnswer = answers[questionKey] || '';\n\n  return (\n    <div className=\"course-content-container\">\n      <div className=\"course-header\">\n        <button className=\"back-button\" onClick={() => navigate('/training')}>\n          Back to Courses\n        </button>\n        <h1>{course.title}</h1>\n      </div>\n      \n      <div className=\"course-progress-bar\">\n        <div className=\"progress-sections\">\n          {course.sections.map((section, index) => (\n            <div \n              key={index}\n              className={`progress-section ${index < currentSection ? 'completed' : index === currentSection ? 'current' : ''}`}\n            >\n              <span className=\"section-number\">{index + 1}</span>\n              <span className=\"section-title\">{section.title}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"course-content-main\">\n        <div className=\"section-info\">\n          <h2>{currentSectionData.title}</h2>\n          <p>{currentSectionData.description}</p>\n        </div>\n        \n        <div className=\"question-container\">\n          <h3>Question {currentQuestion + 1} of {currentSectionData.questions.length}</h3>\n          \n          <div className=\"question\">\n            <p>{currentQuestionData.text}</p>\n            \n            {currentQuestionData.type === 'multiple-choice' && (\n              <div className=\"multiple-choice\">\n                {currentQuestionData.options.map((option, index) => (\n                  <div key={index} className=\"option\">\n                    <input\n                      type=\"radio\"\n                      id={`option-${index}`}\n                      name={`question-${questionKey}`}\n                      value={option}\n                      checked={currentAnswer === option}\n                      onChange={() => handleAnswerChange(option)}\n                    />\n                    <label htmlFor={`option-${index}`}>{option}</label>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {currentQuestionData.type === 'text' && (\n              <div className=\"text-answer\">\n                <textarea\n                  value={currentAnswer}\n                  onChange={(e) => handleAnswerChange(e.target.value)}\n                  placeholder=\"Type your answer here...\"\n                  rows={4}\n                />\n              </div>\n            )}\n            \n            {currentQuestionData.type === 'boolean' && (\n              <div className=\"boolean-choice\">\n                <div className=\"option\">\n                  <input\n                    type=\"radio\"\n                    id=\"option-true\"\n                    name={`question-${questionKey}`}\n                    value=\"true\"\n                    checked={currentAnswer === 'true'}\n                    onChange={() => handleAnswerChange('true')}\n                  />\n                  <label htmlFor=\"option-true\">True</label>\n                </div>\n                <div className=\"option\">\n                  <input\n                    type=\"radio\"\n                    id=\"option-false\"\n                    name={`question-${questionKey}`}\n                    value=\"false\"\n                    checked={currentAnswer === 'false'}\n                    onChange={() => handleAnswerChange('false')}\n                  />\n                  <label htmlFor=\"option-false\">False</label>\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {saveError && <div className=\"error-message\">{saveError}</div>}\n          \n          <div className=\"question-navigation\">\n            <button \n              className=\"prev-button\" \n              onClick={handlePrevious}\n              disabled={currentSection === 0 && currentQuestion === 0 || saving}\n            >\n              Previous\n            </button>\n            \n            <button \n              className=\"next-button\" \n              onClick={handleNext}\n              disabled={saving}\n            >\n              {currentSection === course.sections.length - 1 && \n               currentQuestion === currentSectionData.questions.length - 1 \n                ? 'Complete Course' \n                : 'Next'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}