{"ast":null,"code":"// Authentication functions\nimport{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,sendPasswordResetEmail,updateProfile,onAuthStateChanged}from'firebase/auth';import{doc,setDoc,getDoc}from'firebase/firestore';import{auth,db}from'./config';// Export auth directly for components that need it\nexport{auth};// Register a new user\nexport const registerUser=async function(email,password,displayName){let role=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'cleaner';try{// Create user in Firebase Authentication\nconst userCredential=await createUserWithEmailAndPassword(auth,email,password);const user=userCredential.user;// Update profile with display name\nawait updateProfile(user,{displayName});// Create user document in Firestore\nawait setDoc(doc(db,'users',user.uid),{uid:user.uid,email,displayName,role,createdAt:new Date().toISOString(),profileComplete:false});return{success:true,user:{uid:user.uid,email:user.email,displayName:user.displayName,role}};}catch(error){console.error('Error registering user:',error);return{success:false,error:error.message};}};// Sign in existing user\nexport const signInUser=async(email,password)=>{try{const userCredential=await signInWithEmailAndPassword(auth,email,password);const user=userCredential.user;// Get user role from Firestore\nconst userDoc=await getDoc(doc(db,'users',user.uid));const userData=userDoc.data();return{success:true,user:{uid:user.uid,email:user.email,displayName:user.displayName,role:(userData===null||userData===void 0?void 0:userData.role)||'cleaner'}};}catch(error){console.error('Error signing in:',error);return{success:false,error:error.message};}};// Sign out user\nexport const signOutUser=async()=>{try{await signOut(auth);return{success:true};}catch(error){console.error('Error signing out:',error);return{success:false,error:error.message};}};// Send password reset email\nexport const resetPassword=async email=>{try{await sendPasswordResetEmail(auth,email);return{success:true};}catch(error){console.error('Error sending password reset email:',error);return{success:false,error:error.message};}};// Check if user is admin\nexport const checkIfAdmin=async uid=>{try{const userDoc=await getDoc(doc(db,'users',uid));if(userDoc.exists()){const userData=userDoc.data();return userData.role==='admin';}return false;}catch(error){console.error('Error checking admin status:',error);return false;}};// Set up auth state observer\nexport const setupAuthObserver=callback=>{return onAuthStateChanged(auth,async user=>{if(user){// User is signed in\ntry{const userDoc=await getDoc(doc(db,'users',user.uid));if(userDoc.exists()){const userData=userDoc.data();callback({uid:user.uid,email:user.email,displayName:user.displayName||userData.displayName,role:userData.role||'cleaner',profileComplete:userData.profileComplete||false});}else{callback({uid:user.uid,email:user.email,displayName:user.displayName,role:'cleaner',profileComplete:false});}}catch(error){console.error('Error getting user data:',error);callback({uid:user.uid,email:user.email,displayName:user.displayName,role:'cleaner',profileComplete:false});}}else{// User is signed out\ncallback(null);}});};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","updateProfile","onAuthStateChanged","doc","setDoc","getDoc","auth","db","registerUser","email","password","displayName","role","arguments","length","undefined","userCredential","user","uid","createdAt","Date","toISOString","profileComplete","success","error","console","message","signInUser","userDoc","userData","data","signOutUser","resetPassword","checkIfAdmin","exists","setupAuthObserver","callback"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/firebase/auth.js"],"sourcesContent":["// Authentication functions\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword,\n  signOut,\n  sendPasswordResetEmail,\n  updateProfile,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { auth, db } from './config';\n\n// Export auth directly for components that need it\nexport { auth };\n\n// Register a new user\nexport const registerUser = async (email, password, displayName, role = 'cleaner') => {\n  try {\n    // Create user in Firebase Authentication\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    \n    // Update profile with display name\n    await updateProfile(user, { displayName });\n    \n    // Create user document in Firestore\n    await setDoc(doc(db, 'users', user.uid), {\n      uid: user.uid,\n      email,\n      displayName,\n      role,\n      createdAt: new Date().toISOString(),\n      profileComplete: false\n    });\n    \n    return {\n      success: true,\n      user: {\n        uid: user.uid,\n        email: user.email,\n        displayName: user.displayName,\n        role\n      }\n    };\n  } catch (error) {\n    console.error('Error registering user:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// Sign in existing user\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    \n    // Get user role from Firestore\n    const userDoc = await getDoc(doc(db, 'users', user.uid));\n    const userData = userDoc.data();\n    \n    return {\n      success: true,\n      user: {\n        uid: user.uid,\n        email: user.email,\n        displayName: user.displayName,\n        role: userData?.role || 'cleaner'\n      }\n    };\n  } catch (error) {\n    console.error('Error signing in:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// Sign out user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('Error signing out:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// Send password reset email\nexport const resetPassword = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('Error sending password reset email:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// Check if user is admin\nexport const checkIfAdmin = async (uid) => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', uid));\n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      return userData.role === 'admin';\n    }\n    return false;\n  } catch (error) {\n    console.error('Error checking admin status:', error);\n    return false;\n  }\n};\n\n// Set up auth state observer\nexport const setupAuthObserver = (callback) => {\n  return onAuthStateChanged(auth, async (user) => {\n    if (user) {\n      // User is signed in\n      try {\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          callback({\n            uid: user.uid,\n            email: user.email,\n            displayName: user.displayName || userData.displayName,\n            role: userData.role || 'cleaner',\n            profileComplete: userData.profileComplete || false\n          });\n        } else {\n          callback({\n            uid: user.uid,\n            email: user.email,\n            displayName: user.displayName,\n            role: 'cleaner',\n            profileComplete: false\n          });\n        }\n      } catch (error) {\n        console.error('Error getting user data:', error);\n        callback({\n          uid: user.uid,\n          email: user.email,\n          displayName: user.displayName,\n          role: 'cleaner',\n          profileComplete: false\n        });\n      }\n    } else {\n      // User is signed out\n      callback(null);\n    }\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}