{"ast":null,"code":"import React from'react';import{Navigate,Outlet}from'react-router-dom';import{useAuth}from'./AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoutes=()=>{const{currentUser,loading}=useAuth();// If still loading auth state, show loading indicator\nif(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});}// If not authenticated, redirect to login\nif(!currentUser){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// If authenticated, render child routes\nreturn/*#__PURE__*/_jsx(Outlet,{});};export default ProtectedRoutes;","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsx","_jsx","jsxs","_jsxs","ProtectedRoutes","currentUser","loading","className","children","to","replace"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/components/ProtectedRoutes.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\n\nconst ProtectedRoutes = () => {\n  const { currentUser, loading } = useAuth();\n  \n  // If still loading auth state, show loading indicator\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n  \n  // If not authenticated, redirect to login\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  // If authenticated, render child routes\n  return <Outlet />;\n};\n\nexport default ProtectedRoutes;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,OAAO,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAEC,WAAW,CAAEC,OAAQ,CAAC,CAAGP,OAAO,CAAC,CAAC,CAE1C;AACA,GAAIO,OAAO,CAAE,CACX,mBACEH,KAAA,QAAKI,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCP,IAAA,QAAKM,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCN,IAAA,MAAAO,QAAA,CAAG,YAAU,CAAG,CAAC,EACd,CAAC,CAEV,CAEA;AACA,GAAI,CAACH,WAAW,CAAE,CAChB,mBAAOJ,IAAA,CAACJ,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,mBAAOT,IAAA,CAACH,MAAM,GAAE,CAAC,CACnB,CAAC,CAED,cAAe,CAAAM,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}