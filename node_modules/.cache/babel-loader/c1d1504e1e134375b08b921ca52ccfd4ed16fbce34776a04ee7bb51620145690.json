{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{getUserApplications}from'../firebase/firestore';import{useAuth}from'../components/AuthContext';import'../styles/JobApplications.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobApplications=()=>{const{currentUser}=useAuth();const navigate=useNavigate();const[applications,setApplications]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');useEffect(()=>{const fetchApplications=async()=>{if(!currentUser)return;try{setLoading(true);const result=await getUserApplications(currentUser.uid);if(result.success){setApplications(result.applications);}else{setError('Failed to fetch your applications');}}catch(err){setError('Error fetching applications: '+err.message);}finally{setLoading(false);}};fetchApplications();},[currentUser]);// Format date to be more readable\nconst formatDate=dateString=>{const options={year:'numeric',month:'short',day:'numeric'};return new Date(dateString).toLocaleDateString(undefined,options);};// Get status badge class based on application status\nconst getStatusBadgeClass=status=>{switch(status){case'approved':return'status-approved';case'rejected':return'status-rejected';case'pending':default:return'status-pending';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"job-applications-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Job Applications\"}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading your applications...\"})]}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}):applications.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-applications-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"You haven't applied for any jobs yet.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"browse-jobs-button\",onClick:()=>navigate('/jobs'),children:\"Browse Available Jobs\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"applications-list\",children:applications.map(application=>/*#__PURE__*/_jsxs(\"div\",{className:\"application-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"application-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:application.jobTitle||'Job Application'}),/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${getStatusBadgeClass(application.status)}`,children:application.status.charAt(0).toUpperCase()+application.status.slice(1)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"application-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"application-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Applied On:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value\",children:formatDate(application.appliedAt)})]}),application.message&&/*#__PURE__*/_jsxs(\"div\",{className:\"application-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Your Message:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value message\",children:application.message})]}),application.adminNotes&&/*#__PURE__*/_jsxs(\"div\",{className:\"application-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Admin Notes:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value admin-notes\",children:application.adminNotes})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"application-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"view-job-button\",onClick:()=>navigate(`/jobs/${application.jobId}`),children:\"View Job Details\"})})]},application.id))})]});};export default JobApplications;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getUserApplications","useAuth","jsx","_jsx","jsxs","_jsxs","JobApplications","currentUser","navigate","applications","setApplications","loading","setLoading","error","setError","fetchApplications","result","uid","success","err","message","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","getStatusBadgeClass","status","className","children","length","onClick","map","application","jobTitle","charAt","toUpperCase","slice","appliedAt","adminNotes","jobId","id"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/pages/JobApplications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserApplications } from '../firebase/firestore';\nimport { useAuth } from '../components/AuthContext';\nimport '../styles/JobApplications.css';\n\nconst JobApplications = () => {\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchApplications = async () => {\n      if (!currentUser) return;\n      \n      try {\n        setLoading(true);\n        const result = await getUserApplications(currentUser.uid);\n        \n        if (result.success) {\n          setApplications(result.applications);\n        } else {\n          setError('Failed to fetch your applications');\n        }\n      } catch (err) {\n        setError('Error fetching applications: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchApplications();\n  }, [currentUser]);\n\n  // Format date to be more readable\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Get status badge class based on application status\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'approved':\n        return 'status-approved';\n      case 'rejected':\n        return 'status-rejected';\n      case 'pending':\n      default:\n        return 'status-pending';\n    }\n  };\n\n  return (\n    <div className=\"job-applications-container\">\n      <h1>My Job Applications</h1>\n      \n      {loading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading your applications...</p>\n        </div>\n      ) : error ? (\n        <div className=\"error-message\">{error}</div>\n      ) : applications.length === 0 ? (\n        <div className=\"no-applications-message\">\n          <p>You haven't applied for any jobs yet.</p>\n          <button \n            className=\"browse-jobs-button\" \n            onClick={() => navigate('/jobs')}\n          >\n            Browse Available Jobs\n          </button>\n        </div>\n      ) : (\n        <div className=\"applications-list\">\n          {applications.map(application => (\n            <div key={application.id} className=\"application-card\">\n              <div className=\"application-header\">\n                <h3>{application.jobTitle || 'Job Application'}</h3>\n                <span className={`status-badge ${getStatusBadgeClass(application.status)}`}>\n                  {application.status.charAt(0).toUpperCase() + application.status.slice(1)}\n                </span>\n              </div>\n              \n              <div className=\"application-details\">\n                <div className=\"application-detail\">\n                  <span className=\"detail-label\">Applied On:</span>\n                  <span className=\"detail-value\">{formatDate(application.appliedAt)}</span>\n                </div>\n                \n                {application.message && (\n                  <div className=\"application-detail\">\n                    <span className=\"detail-label\">Your Message:</span>\n                    <span className=\"detail-value message\">{application.message}</span>\n                  </div>\n                )}\n                \n                {application.adminNotes && (\n                  <div className=\"application-detail\">\n                    <span className=\"detail-label\">Admin Notes:</span>\n                    <span className=\"detail-value admin-notes\">{application.adminNotes}</span>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"application-actions\">\n                <button \n                  className=\"view-job-button\" \n                  onClick={() => navigate(`/jobs/${application.jobId}`)}\n                >\n                  View Job Details\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default JobApplications;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}