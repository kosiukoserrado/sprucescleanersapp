{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{onAuthStateChanged,signInWithEmailAndPassword,createUserWithEmailAndPassword,signOut,sendPasswordResetEmail,updateProfile}from'firebase/auth';import{auth}from'../firebase/auth';import{getUserProfile,createUserProfile}from'../firebase/firestore';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userProfile,setUserProfile]=useState(null);const[loading,setLoading]=useState(true);const[isAdmin,setIsAdmin]=useState(false);// Login function\nconst login=async(email,password)=>{try{const userCredential=await signInWithEmailAndPassword(auth,email,password);return{success:true,user:userCredential.user};}catch(error){console.error(\"Login error:\",error);return{success:false,error:error.message||'Failed to log in'};}};// Register function\nconst register=async(email,password,displayName)=>{try{const userCredential=await createUserWithEmailAndPassword(auth,email,password);// Update profile with display name\nawait updateProfile(userCredential.user,{displayName});// Create user profile in Firestore\nawait createUserProfile(userCredential.user.uid,{email,displayName,role:'cleaner',createdAt:new Date().toISOString(),status:'pending'});return{success:true,user:userCredential.user};}catch(error){console.error(\"Registration error:\",error);return{success:false,error:error.message||'Failed to register'};}};// Logout function\nconst logout=async()=>{try{await signOut(auth);return{success:true};}catch(error){console.error(\"Logout error:\",error);return{success:false,error:error.message||'Failed to log out'};}};// Reset password function\nconst resetPassword=async email=>{try{await sendPasswordResetEmail(auth,email);return{success:true};}catch(error){console.error(\"Reset password error:\",error);return{success:false,error:error.message||'Failed to send password reset email'};}};// Effect to handle auth state changes\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async user=>{setCurrentUser(user);if(user){try{// Get user profile from Firestore\nconst profileResult=await getUserProfile(user.uid);if(profileResult.success){var _profileResult$profil;setUserProfile(profileResult.profile);setIsAdmin(((_profileResult$profil=profileResult.profile)===null||_profileResult$profil===void 0?void 0:_profileResult$profil.role)==='admin');}else{console.error(\"Failed to get user profile:\",profileResult.error);}}catch(error){console.error(\"Error getting user profile:\",error);}}else{setUserProfile(null);setIsAdmin(false);}setLoading(false);});return unsubscribe;},[]);const value={currentUser,userProfile,isAdmin,login,register,logout,resetPassword};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","sendPasswordResetEmail","updateProfile","auth","getUserProfile","createUserProfile","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","isAdmin","setIsAdmin","login","email","password","userCredential","success","user","error","console","message","register","displayName","uid","role","createdAt","Date","toISOString","status","logout","resetPassword","unsubscribe","profileResult","_profileResult$profil","profile","value","Provider"],"sources":["/Users/kosiuko/Documents/mnv2spruces/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  onAuthStateChanged, \n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  sendPasswordResetEmail,\n  updateProfile\n} from 'firebase/auth';\nimport { auth } from '../firebase/auth';\nimport { getUserProfile, createUserProfile } from '../firebase/firestore';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return { success: true, user: userCredential.user };\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return { \n        success: false, \n        error: error.message || 'Failed to log in' \n      };\n    }\n  };\n\n  // Register function\n  const register = async (email, password, displayName) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Update profile with display name\n      await updateProfile(userCredential.user, { displayName });\n      \n      // Create user profile in Firestore\n      await createUserProfile(userCredential.user.uid, {\n        email,\n        displayName,\n        role: 'cleaner',\n        createdAt: new Date().toISOString(),\n        status: 'pending'\n      });\n      \n      return { success: true, user: userCredential.user };\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      return { \n        success: false, \n        error: error.message || 'Failed to register' \n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      return { success: true };\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      return { \n        success: false, \n        error: error.message || 'Failed to log out' \n      };\n    }\n  };\n\n  // Reset password function\n  const resetPassword = async (email) => {\n    try {\n      await sendPasswordResetEmail(auth, email);\n      return { success: true };\n    } catch (error) {\n      console.error(\"Reset password error:\", error);\n      return { \n        success: false, \n        error: error.message || 'Failed to send password reset email' \n      };\n    }\n  };\n\n  // Effect to handle auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      setCurrentUser(user);\n      \n      if (user) {\n        try {\n          // Get user profile from Firestore\n          const profileResult = await getUserProfile(user.uid);\n          \n          if (profileResult.success) {\n            setUserProfile(profileResult.profile);\n            setIsAdmin(profileResult.profile?.role === 'admin');\n          } else {\n            console.error(\"Failed to get user profile:\", profileResult.error);\n          }\n        } catch (error) {\n          console.error(\"Error getting user profile:\", error);\n        }\n      } else {\n        setUserProfile(null);\n        setIsAdmin(false);\n      }\n      \n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    userProfile,\n    isAdmin,\n    login,\n    register,\n    logout,\n    resetPassword\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}